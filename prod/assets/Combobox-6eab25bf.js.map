{"version":3,"file":"Combobox-6eab25bf.js","sources":["../../../../node_modules/react-widgets/esm/Combobox.js","../../../components/form-elements-rw/src/Combobox.jsx"],"sourcesContent":["const _excluded = [\"id\", \"className\", \"containerClassName\", \"placeholder\", \"autoFocus\", \"textField\", \"dataKey\", \"autoSelectMatches\", \"focusFirstItem\", \"value\", \"defaultValue\", \"onChange\", \"open\", \"defaultOpen\", \"onToggle\", \"filter\", \"busy\", \"disabled\", \"readOnly\", \"selectIcon\", \"hideCaret\", \"hideEmptyPopup\", \"busySpinner\", \"dropUp\", \"tabIndex\", \"popupTransition\", \"name\", \"onSelect\", \"onKeyDown\", \"onBlur\", \"onFocus\", \"inputProps\", \"listProps\", \"popupProps\", \"groupBy\", \"renderListItem\", \"renderListGroup\", \"optionComponent\", \"listComponent\", \"popupComponent\", \"data\", \"messages\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport cn from 'classnames';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport { caretDown } from './Icon';\nimport Input from './Input';\nimport List from './List';\nimport { FocusListContext, useFocusList } from './FocusListContext';\nimport BasePopup from './Popup';\nimport InputAddon from './InputAddon';\nimport Widget from './Widget';\nimport WidgetPicker from './WidgetPicker';\nimport { useMessagesWithDefaults } from './messages';\nimport { useActiveDescendant } from './A11y';\nimport * as CustomPropTypes from './PropTypes';\nimport { useAccessors } from './Accessors';\nimport { useFilteredData } from './Filter';\nimport useDropdownToggle from './useDropdownToggle';\nimport useFocusManager from './useFocusManager';\nimport { notify, useFirstFocusedRender, useInstanceId } from './WidgetHelpers';\nimport { Spinner } from './Icon';\n\nfunction indexOf(data, searchTerm, text) {\n  if (!searchTerm.trim()) return -1;\n\n  for (let idx = 0; idx < data.length; idx++) if (text(data[idx]).toLowerCase() === searchTerm) return idx;\n\n  return -1;\n}\n\nlet propTypes = {\n  value: PropTypes.any,\n  onChange: PropTypes.func,\n  open: PropTypes.bool,\n  onToggle: PropTypes.func,\n  renderListItem: PropTypes.func,\n  listComponent: PropTypes.elementType,\n  renderListGroup: PropTypes.func,\n  groupBy: CustomPropTypes.accessor,\n  data: PropTypes.array,\n  dataKey: CustomPropTypes.accessor,\n  textField: CustomPropTypes.accessor,\n  name: PropTypes.string,\n\n  /** Do not show the auto complete list when it returns no results. */\n  hideEmptyPopup: PropTypes.bool,\n\n  /** Hide the combobox dropdown indicator. */\n  hideCaret: PropTypes.bool,\n\n  /**\n   *\n   * @type {(dataItem: ?any, metadata: { originalEvent: SyntheticEvent }) => void}\n   */\n  onSelect: PropTypes.func,\n  autoFocus: PropTypes.bool,\n  disabled: CustomPropTypes.disabled.acceptsArray,\n  readOnly: CustomPropTypes.disabled,\n  busy: PropTypes.bool,\n\n  /** Specify the element used to render the select (down arrow) icon. */\n  selectIcon: PropTypes.node,\n\n  /** Specify the element used to render the busy indicator */\n  busySpinner: PropTypes.node,\n  dropUp: PropTypes.bool,\n  popupTransition: PropTypes.elementType,\n  placeholder: PropTypes.string,\n\n  /** Adds a css class to the input container element. */\n  containerClassName: PropTypes.string,\n  inputProps: PropTypes.object,\n  listProps: PropTypes.object,\n  messages: PropTypes.shape({\n    openCombobox: CustomPropTypes.message,\n    emptyList: CustomPropTypes.message,\n    emptyFilter: CustomPropTypes.message\n  })\n};\n\n/**\n * ---\n * shortcuts:\n *   - { key: alt + down arrow, label: open combobox }\n *   - { key: alt + up arrow, label: close combobox }\n *   - { key: down arrow, label: move focus to next item }\n *   - { key: up arrow, label: move focus to previous item }\n *   - { key: home, label: move focus to first item }\n *   - { key: end, label: move focus to last item }\n *   - { key: enter, label: select focused item }\n *   - { key: any key, label: search list for item starting with key }\n * ---\n *\n * Select an item from the list, or input a custom value. The Combobox can also make suggestions as you type.\n\n * @public\n */\nconst ComboboxImpl = /*#__PURE__*/React.forwardRef(function Combobox(_ref, outerRef) {\n  let {\n    id,\n    className,\n    containerClassName,\n    placeholder,\n    autoFocus,\n    textField,\n    dataKey,\n    autoSelectMatches,\n    focusFirstItem = false,\n    value,\n    defaultValue = '',\n    onChange,\n    open,\n    defaultOpen = false,\n    onToggle,\n    filter = true,\n    busy,\n    disabled,\n    readOnly,\n    selectIcon = caretDown,\n    hideCaret,\n    hideEmptyPopup,\n    busySpinner,\n    dropUp,\n    tabIndex,\n    popupTransition,\n    name,\n    onSelect,\n    onKeyDown,\n    onBlur,\n    onFocus,\n    inputProps,\n    listProps,\n    popupProps,\n    groupBy,\n    renderListItem,\n    renderListGroup,\n    optionComponent,\n    listComponent: ListComponent = List,\n    popupComponent: Popup = BasePopup,\n    data: rawData = [],\n    messages: userMessages\n  } = _ref,\n      elementProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  let [currentValue, handleChange] = useUncontrolledProp(value, defaultValue, onChange);\n  const [currentOpen, handleOpen] = useUncontrolledProp(open, defaultOpen, onToggle);\n  const ref = useRef(null);\n  const inputRef = useRef(null);\n  const listRef = useRef(null);\n  const [suggestion, setSuggestion] = useState(null);\n  const shouldFilter = useRef(false);\n  const inputId = useInstanceId(id, '_input');\n  const listId = useInstanceId(id, '_listbox');\n  const activeId = useInstanceId(id, '_listbox_active_option');\n  const accessors = useAccessors(textField, dataKey);\n  const messages = useMessagesWithDefaults(userMessages);\n  const toggle = useDropdownToggle(currentOpen, handleOpen);\n  const isDisabled = disabled === true;\n  const isReadOnly = !!readOnly;\n  const data = useFilteredData(rawData, filter, shouldFilter.current ? accessors.text(currentValue) : void 0, accessors.text);\n  const selectedItem = useMemo(() => data[accessors.indexOf(data, currentValue)], [data, currentValue, accessors]);\n  const list = useFocusList({\n    activeId,\n    scope: ref,\n    focusFirstItem,\n    anchorItem: currentOpen ? selectedItem : undefined\n  });\n  const [focusEvents, focused] = useFocusManager(ref, {\n    disabled: isDisabled,\n    onBlur,\n    onFocus\n  }, {\n    didHandle(focused) {\n      if (!focused) {\n        shouldFilter.current = false;\n        toggle.close();\n        setSuggestion(null);\n        list.focus(undefined);\n      } else {\n        focus({\n          preventScroll: true\n        });\n      }\n    }\n\n  });\n  useActiveDescendant(ref, activeId, currentOpen, [list.getFocused()]);\n  /**\n   * Handlers\n   */\n\n  const handleClick = e => {\n    if (readOnly || isDisabled) return; // prevents double clicks when in a <label>\n\n    e.preventDefault();\n    focus();\n    toggle();\n  };\n\n  const handleSelect = (data, originalEvent) => {\n    toggle.close();\n    shouldFilter.current = false;\n    setSuggestion(null);\n    notify(onSelect, [data, {\n      originalEvent\n    }]);\n    change(data, originalEvent, true);\n    focus({\n      preventScroll: true\n    });\n  };\n\n  const handleInputKeyDown = ({\n    key\n  }) => {\n    if (key === 'Backspace' || key === 'Delete') {\n      list.focus(null);\n    }\n  };\n\n  const handleInputChange = event => {\n    let idx = autoSelectMatches ? indexOf(rawData, event.target.value.toLowerCase(), accessors.text) : -1;\n    shouldFilter.current = true;\n    setSuggestion(null);\n    const nextValue = idx === -1 ? event.target.value : rawData[idx];\n    change(nextValue, event);\n    if (!nextValue) toggle.close();else toggle.open();\n  };\n\n  const handleKeyDown = e => {\n    if (readOnly) return;\n    let {\n      key,\n      altKey,\n      shiftKey\n    } = e;\n    notify(onKeyDown, [e]);\n    if (e.defaultPrevented) return;\n\n    const select = item => item != null && handleSelect(item, e);\n\n    const setFocused = el => {\n      if (!el) return;\n      setSuggestion(list.toDataItem(el));\n      list.focus(el);\n    };\n\n    if (key === 'End' && currentOpen && !shiftKey) {\n      e.preventDefault();\n      setFocused(list.last());\n    } else if (key === 'Home' && currentOpen && !shiftKey) {\n      e.preventDefault();\n      setFocused(list.first());\n    } else if (key === 'Escape' && currentOpen) {\n      e.preventDefault();\n      setSuggestion(null);\n      toggle.close();\n    } else if (key === 'Enter' && currentOpen) {\n      e.preventDefault();\n      select(list.getFocused());\n    } else if (key === 'ArrowDown') {\n      e.preventDefault();\n\n      if (currentOpen) {\n        setFocused(list.next());\n      } else {\n        return toggle.open();\n      }\n    } else if (key === 'ArrowUp') {\n      e.preventDefault();\n      if (altKey) return toggle.close();\n\n      if (currentOpen) {\n        setFocused(list.prev());\n      }\n    }\n  };\n  /**\n   * Methods\n   */\n\n\n  function focus(opts) {\n    if (inputRef.current) inputRef.current.focus(opts);\n  }\n\n  function change(nextValue, originalEvent, selected = false) {\n    handleChange(nextValue, {\n      lastValue: currentValue,\n      originalEvent,\n      source: selected ? 'listbox' : 'input'\n    });\n  }\n  /**\n   * Rendering\n   */\n\n\n  useImperativeHandle(outerRef, () => ({\n    focus\n  }));\n  let shouldRenderPopup = useFirstFocusedRender(focused, currentOpen);\n  let valueItem = accessors.findOrSelf(data, currentValue);\n  let inputValue = accessors.text(suggestion || valueItem);\n  let completeType = filter ? 'list' : 'none';\n  let popupOpen = currentOpen && (!hideEmptyPopup || !!data.length);\n  let inputReadOnly = // @ts-ignore\n  (inputProps == null ? void 0 : inputProps.readOnly) != null ? inputProps == null ? void 0 : inputProps.readOnly : readOnly;\n  let inputAddon = false;\n\n  if (!hideCaret) {\n    inputAddon = /*#__PURE__*/React.createElement(InputAddon, {\n      busy: busy,\n      icon: selectIcon,\n      spinner: busySpinner,\n      onClick: handleClick,\n      disabled: !!isDisabled || isReadOnly // FIXME\n      ,\n      label: messages.openCombobox()\n    });\n  } else if (busy) {\n    inputAddon = /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      className: \"rw-btn rw-picker-caret\"\n    }, busySpinner || Spinner);\n  }\n\n  return /*#__PURE__*/React.createElement(Widget, _extends({}, elementProps, {\n    ref: ref,\n    open: currentOpen,\n    dropUp: dropUp,\n    focused: focused,\n    disabled: isDisabled,\n    readOnly: isReadOnly\n  }, focusEvents, {\n    onKeyDown: handleKeyDown,\n    className: cn(className, 'rw-combobox')\n  }), /*#__PURE__*/React.createElement(WidgetPicker, {\n    className: cn(containerClassName, hideCaret && 'rw-widget-input', hideCaret && !busy && 'rw-hide-caret')\n  }, /*#__PURE__*/React.createElement(Input, _extends({}, inputProps, {\n    role: \"combobox\",\n    name: name,\n    id: inputId,\n    className: cn( // @ts-ignore\n    inputProps && inputProps.className, 'rw-combobox-input', !hideCaret && 'rw-widget-input'),\n    autoFocus: autoFocus,\n    tabIndex: tabIndex,\n    disabled: isDisabled,\n    readOnly: inputReadOnly,\n    \"aria-busy\": !!busy,\n    \"aria-owns\": listId,\n    \"aria-autocomplete\": completeType,\n    \"aria-expanded\": currentOpen,\n    \"aria-haspopup\": true,\n    placeholder: placeholder,\n    value: inputValue,\n    onChange: handleInputChange,\n    onKeyDown: handleInputKeyDown,\n    ref: inputRef\n  })), inputAddon), /*#__PURE__*/React.createElement(FocusListContext.Provider, {\n    value: list.context\n  }, shouldRenderPopup && /*#__PURE__*/React.createElement(Popup, _extends({}, popupProps, {\n    dropUp: dropUp,\n    open: popupOpen,\n    transition: popupTransition,\n    onEntering: () => listRef.current.scrollIntoView()\n  }), /*#__PURE__*/React.createElement(ListComponent, _extends({}, listProps, {\n    id: listId,\n    tabIndex: -1,\n    data: data,\n    groupBy: groupBy,\n    disabled: disabled,\n    accessors: accessors,\n    renderItem: renderListItem,\n    renderGroup: renderListGroup,\n    optionComponent: optionComponent,\n    value: selectedItem,\n    searchTerm: valueItem && accessors.text(valueItem) || '',\n    \"aria-hidden\": !popupOpen,\n    \"aria-labelledby\": inputId,\n    \"aria-live\": popupOpen ? 'polite' : void 0,\n    onChange: (d, meta) => handleSelect(d, meta.originalEvent),\n    ref: listRef,\n    messages: {\n      emptyList: rawData.length ? messages.emptyFilter : messages.emptyList\n    }\n  })))));\n});\nComboboxImpl.displayName = 'Combobox';\nComboboxImpl.propTypes = propTypes;\nexport default ComboboxImpl;","import PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport RWCombobox from 'react-widgets/Combobox';\nimport BusySpinner from './components/BusySpinner';\nimport SelectIcon from './components/SelectIcon';\n\nimport { getComboboxExtantProps } from './utils/extantPropsUtils';\n\n// Styles\nimport './styles/combobox.scss';\n\nconst Combobox = (props) => {\n    const {\n        contextCls,\n        hasError,\n        onChange,\n        onSelect,\n        onToggle,\n        renderBusySpinner,\n        renderSelectIcon,\n    } = props;\n    const baseCls = 'bankai-combobox';\n    const comboboxProps = getComboboxExtantProps(props);\n    const modCls = {\n        [`${baseCls}--error`]: hasError,\n    };\n    const busySpinner = renderBusySpinner({ baseCls });\n    const selectIcon = renderSelectIcon({ baseCls });\n\n    return (\n        <RWCombobox\n            {...comboboxProps}\n            className={cx(baseCls, modCls, contextCls)}\n            busySpinner={busySpinner}\n            selectIcon={selectIcon}\n            onChange={onChange}\n            onSelect={onSelect}\n            onToggle={onToggle}\n        />\n    );\n};\n\nCombobox.defaultProps = {\n    shouldAutoFocus: false,\n    shouldAutoSelectMatches: false,\n    hasError: false,\n    isBusy: false,\n    isDefaultOpen: false,\n    isDisabled: false,\n    isReadOnly: false,\n    shouldDropUp: false,\n    shouldFocustFirstItem: false,\n    data: [],\n    onChange: () => Promise.resolve(),\n    onSelect: () => Promise.resolve(),\n    onToggle: () => Promise.resolve(),\n    renderBusySpinner: BusySpinner,\n    renderSelectIcon: SelectIcon,\n};\n\nCombobox.propTypes = {\n    contextCls: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    placeholder: PropTypes.string,\n    hasError: PropTypes.bool,\n    isBusy: PropTypes.bool,\n    isDefaultOpen: PropTypes.bool,\n    isDisabled: PropTypes.bool,\n    isOpen: PropTypes.bool,\n    isReadOnly: PropTypes.bool,\n    shouldAutoFocus: PropTypes.bool,\n    shouldAutoSelectMatches: PropTypes.bool,\n    shouldDropUp: PropTypes.bool,\n    shouldFocustFirstItem: PropTypes.bool,\n    shouldHideCaret: PropTypes.bool,\n    shouldHideEmptyPopup: PropTypes.bool,\n    data: PropTypes.array,\n    disabledOptions: PropTypes.array,\n    inputProps: PropTypes.object,\n    listProps: PropTypes.object,\n    messages: PropTypes.object,\n    dataKey: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    defaultValue: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    filter: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.func,\n        PropTypes.bool,\n    ]),\n    groupBy: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    listComponent: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n    textField: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    onChange: PropTypes.func,\n    onSelect: PropTypes.func,\n    onToggle: PropTypes.func,\n    renderBusySpinner: PropTypes.func,\n    renderListGroup: PropTypes.func,\n    renderListItem: PropTypes.func,\n    renderSelectIcon: PropTypes.func,\n};\n\nexport default Combobox;\n"],"names":["_excluded","_extends","target","i","source","key","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","data","searchTerm","text","idx","propTypes","PropTypes.any","PropTypes.func","PropTypes.bool","PropTypes.elementType","CustomPropTypes.accessor","PropTypes.array","PropTypes.string","CustomPropTypes.disabled","PropTypes.node","PropTypes.object","PropTypes.shape","CustomPropTypes.message","ComboboxImpl","React.forwardRef","_ref","outerRef","id","className","containerClassName","placeholder","autoFocus","textField","dataKey","autoSelectMatches","focusFirstItem","value","defaultValue","onChange","open","defaultOpen","onToggle","filter","busy","disabled","readOnly","selectIcon","caretDown","hideCaret","hideEmptyPopup","busySpinner","dropUp","tabIndex","popupTransition","name","onSelect","onKeyDown","onBlur","onFocus","inputProps","listProps","popupProps","groupBy","renderListItem","renderListGroup","optionComponent","ListComponent","List","Popup","BasePopup","rawData","userMessages","elementProps","currentValue","handleChange","useUncontrolledProp","currentOpen","handleOpen","ref","useRef","inputRef","listRef","suggestion","setSuggestion","useState","shouldFilter","inputId","useInstanceId","listId","activeId","accessors","useAccessors","messages","useMessagesWithDefaults","toggle","useDropdownToggle","isDisabled","isReadOnly","useFilteredData","selectedItem","useMemo","list","useFocusList","focusEvents","focused","useFocusManager","focus","useActiveDescendant","handleClick","e","handleSelect","originalEvent","notify","change","handleInputKeyDown","handleInputChange","event","nextValue","handleKeyDown","altKey","shiftKey","select","item","setFocused","el","opts","selected","useImperativeHandle","shouldRenderPopup","useFirstFocusedRender","valueItem","inputValue","completeType","popupOpen","inputReadOnly","inputAddon","React.createElement","Spinner","InputAddon","Widget","cn","WidgetPicker","Input","FocusListContext","d","meta","Combobox","props","contextCls","hasError","renderBusySpinner","renderSelectIcon","baseCls","comboboxProps","getComboboxExtantProps","modCls","jsx","RWCombobox","cx","BusySpinner","SelectIcon","PropTypes","BankaiCombobox"],"mappings":"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","x_google_ignoreList":[0]}