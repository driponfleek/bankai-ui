{"version":3,"file":"TextInput-f65f4567.js","sources":["../../../components/form-elements/src/UniversalTextInput.jsx","../../../components/form-elements/src/TextInput.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nconst UniversalTextInput = (props) => {\n    const {\n        baseCls,\n        contextCls,\n        isTextarea,\n        getExtantProps,\n        onChange,\n        ...rest\n    } = props;\n    const inputProps = getExtantProps({ ...rest, isTextarea });\n    const Tag = isTextarea ? 'textarea' : 'input';\n\n    return (\n        <Tag\n            {...inputProps}\n            className={cx(baseCls, contextCls)}\n            onChange={onChange}\n        />\n    );\n};\n\nUniversalTextInput.defaultProps = {\n    autoComplete: 'on',\n    hasError: false,\n    isDisabled: false,\n    isReadOnly: false,\n    isTextarea: false,\n    shouldAutoFocus: false,\n    shouldSpellCheck: false,\n    getExtantProps: () => ({}),\n    onChange: () => Promise.resolve(),\n};\n\nUniversalTextInput.propTypes = {\n    autoComplete: PropTypes.string,\n    baseCls: PropTypes.string,\n    contextCls: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    placeholder: PropTypes.string,\n    value: PropTypes.string,\n    hasError: PropTypes.bool,\n    isDisabled: PropTypes.bool,\n    isReadOnly: PropTypes.bool,\n    isTextarea: PropTypes.bool,\n    shouldAutoFocus: PropTypes.bool,\n    shouldSpellCheck: PropTypes.bool,\n    getExtantProps: PropTypes.func,\n    onChange: PropTypes.func,\n};\n\nexport default UniversalTextInput;\n","import PropTypes from 'prop-types';\nimport UniversalTextInput from './UniversalTextInput';\n\nimport { getTextInputExtantProps } from './utils/inputUtils';\n\n// Styles\nimport './styles/text-input.scss';\n\nconst TextInput = (props) => {\n    const baseCls = 'bankai-text-input';\n\n    return (\n        <UniversalTextInput\n            {...props}\n            baseCls={baseCls}\n            type=\"text\"\n            getExtantProps={getTextInputExtantProps}\n        />\n    );\n};\n\nTextInput.defaultProps = {\n    hasError: false,\n    isDisabled: false,\n    isReadOnly: false,\n    autoComplete: 'on',\n    shouldAutoFocus: false,\n    shouldSpellCheck: false,\n    onChange: () => Promise.resolve(),\n};\n\nTextInput.propTypes = {\n    autoComplete: PropTypes.string,\n    baseCls: PropTypes.string,\n    contextCls: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    placeholder: PropTypes.string,\n    value: PropTypes.string,\n    hasError: PropTypes.bool,\n    isDisabled: PropTypes.bool,\n    isReadOnly: PropTypes.bool,\n    shouldAutoFocus: PropTypes.bool,\n    shouldSpellCheck: PropTypes.bool,\n    onChange: PropTypes.func,\n};\n\nexport default TextInput;\n"],"names":["UniversalTextInput","props","baseCls","contextCls","isTextarea","getExtantProps","onChange","rest","inputProps","jsx","cx","PropTypes","UniversalTextInput$1","TextInput","getTextInputExtantProps","TextInput$1"],"mappings":"0IAGA,MAAAA,EAAAC,GAAA,CACA,KAAA,CACA,QAAAC,EACA,WAAAC,EACA,WAAAC,EACA,eAAAC,EACA,SAAAC,EACA,GAAAC,CACA,EAAAN,EACAO,EAAAH,EAAA,CAAA,GAAAE,EAAA,WAAAH,CAAA,CAAA,EAIA,OAAAK,EAHAL,EAAA,WAAA,QAGA,CACA,GAAAI,EACA,UAAAE,EAAAR,EAAAC,CAAA,EACA,SAAAG,CAAA,CAAA,CAGA,EAEAN,EAAA,aAAA,CACA,aAAA,KACA,SAAA,GACA,WAAA,GACA,WAAA,GACA,WAAA,GACA,gBAAA,GACA,iBAAA,GACA,eAAA,KAAA,CAAA,GACA,SAAA,IAAA,QAAA,QAAA,CACA,EAEAA,EAAA,UAAA,CACA,aAAAW,EAAA,OACA,QAAAA,EAAA,OACA,WAAAA,EAAA,OACA,GAAAA,EAAA,OACA,KAAAA,EAAA,OACA,YAAAA,EAAA,OACA,MAAAA,EAAA,OACA,SAAAA,EAAA,KACA,WAAAA,EAAA,KACA,WAAAA,EAAA,KACA,WAAAA,EAAA,KACA,gBAAAA,EAAA,KACA,iBAAAA,EAAA,KACA,eAAAA,EAAA,KACA,SAAAA,EAAA,IACA,EAEA,MAAAC,EAAAZ,w1CC9CA,MAAAa,EAAAZ,GAIAQ,EAAAT,EAAA,CACA,GAAAC,EACA,QALA,oBAMA,KAAA,OACA,eAAAa,CAAA,CAAA,EAKAD,EAAA,aAAA,CACA,SAAA,GACA,WAAA,GACA,WAAA,GACA,aAAA,KACA,gBAAA,GACA,iBAAA,GACA,SAAA,IAAA,QAAA,QAAA,CACA,EAEAA,EAAA,UAAA,CACA,aAAAF,EAAA,OACA,QAAAA,EAAA,OACA,WAAAA,EAAA,OACA,GAAAA,EAAA,OACA,KAAAA,EAAA,OACA,YAAAA,EAAA,OACA,MAAAA,EAAA,OACA,SAAAA,EAAA,KACA,WAAAA,EAAA,KACA,WAAAA,EAAA,KACA,gBAAAA,EAAA,KACA,iBAAAA,EAAA,KACA,SAAAA,EAAA,IACA,EAEA,MAAAI,EAAAF"}