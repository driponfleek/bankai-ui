{"version":3,"file":"FormFieldComposer.stories-8e748569.js","sources":["../../stories/components/form-elements/sections/form-field-composer/SectionImplementation.jsx","../../stories/components/form-elements/sections/form-field-composer/SectionPlayground.jsx","../../stories/components/form-elements/StoryFormFieldComposer.jsx","../../stories/components/form-elements/args/ffcArgs.js"],"sourcesContent":["import { StorySection, SectionTitle } from '@driponfleek/bankai-lib-storybook';\nimport CompImportAndUsage from '../../../../../sb-components/docblocks/CompImportAndUsage';\n\n// Utils\nimport { getLocale } from '../../../../../utils/localeUtils';\n\nconst importCodeStr = `import { FormFieldComposer, TextInput } from '@driponfleek/bankai-ui-form-elements';`;\nconst usageCodeStr = `const TextField = FormFieldComposer(TextInput);\n\n<TextField labelProps={{ content: 'User Name' }} />`;\n\nconst SectionImplementation = () => {\n    return (\n        <StorySection>\n            <SectionTitle>{getLocale('titles.implementation')}</SectionTitle>\n            <StorySection>\n                <CompImportAndUsage\n                    importCodeStr={importCodeStr}\n                    usageCodeStr={usageCodeStr}\n                />\n            </StorySection>\n        </StorySection>\n    );\n};\n\nexport default SectionImplementation;\n","import {\n    FormFieldComposer,\n    TextInput,\n} from '@driponfleek/bankai-ui-form-elements';\nimport {\n    StorySection,\n    ComponentPreview,\n} from '@driponfleek/bankai-lib-storybook';\n\nconst TextInputField = FormFieldComposer(TextInput);\n\nconst SectionPlayground = (props) => {\n    return (\n        <StorySection>\n            <ComponentPreview shouldCheckA11Y>\n                <TextInputField {...props} />\n            </ComponentPreview>\n        </StorySection>\n    );\n};\n\nexport default SectionPlayground;\n","import { genSBBaseCls } from '@driponfleek/bankai-lib-storybook';\nimport { STORY_SUB_TITLE, PKG_JSON } from './const/storyConst';\nimport SectionImplementation from './sections/form-field-composer/SectionImplementation';\nimport SectionPlayground from './sections/form-field-composer/SectionPlayground';\nimport StoryLayout from '../../../sb-components/layout/StoryLayout';\n\n// Utils\nimport { getLocale } from '../../../utils/localeUtils';\n\nconst StoryFormFieldComposer = (props) => {\n    const baseCls = genSBBaseCls('form-field-composer');\n\n    return (\n        <StoryLayout\n            contextCls={baseCls}\n            pkgVer={PKG_JSON.version}\n            title={getLocale(\n                'stories.components.formElements.formFieldComposer.title',\n            )}\n            subTitle={STORY_SUB_TITLE}\n        >\n            <SectionPlayground {...props} />\n            <SectionImplementation />\n        </StoryLayout>\n    );\n};\n\nexport default StoryFormFieldComposer;\n","import { FORM_FIELD_COMP_VARIANTS } from '@driponfleek/bankai-ui-form-elements';\nimport { selectArg } from '@driponfleek/bankai-lib-storybook';\nimport {\n    argTypes as sharedFFCArgTypes,\n    args as sharedFFCArgs,\n} from './sharedFFCArgs';\n\nconst { STACKED } = FORM_FIELD_COMP_VARIANTS;\n\nexport const args = {\n    ...sharedFFCArgs,\n    variant: STACKED,\n    // onChange: () => Promise.resolve(),\n    // onSelect: () => Promise.resolve(),\n    // onToggle: () => Promise.resolve(),\n};\n\nexport const argTypes = {\n    ...sharedFFCArgTypes,\n    ...selectArg({\n        description:\n            'Use to control the layout of the form element, label and hints. `INLINE_RIGHT` is used for controls like Radios, Checkboxes, Toggle Switches, etc.',\n        options: Object.keys(FORM_FIELD_COMP_VARIANTS).map(\n            (VARIANT) => FORM_FIELD_COMP_VARIANTS[VARIANT],\n        ),\n        propName: 'variant',\n    }),\n};\n"],"names":["importCodeStr","usageCodeStr","SectionImplementation","StorySection","jsx","SectionTitle","getLocale","CompImportAndUsage","TextInputField","FormFieldComposer","TextInput","SectionPlayground","props","ComponentPreview","StoryFormFieldComposer","baseCls","genSBBaseCls","jsxs","StoryLayout","PKG_JSON","STORY_SUB_TITLE","STACKED","FORM_FIELD_COMP_VARIANTS","args","sharedFFCArgs","argTypes","sharedFFCArgTypes","selectArg","VARIANT"],"mappings":"gtCAMA,MAAAA,EAAA,uFACAC,EAAA;AAAA;AAAA,qDAIAC,EAAA,MAEAC,EACA,CAAA,SAAA,CAAAC,EAAAC,EAAA,CAAA,SAAAC,EAAA,uBAAA,CAAA,CAAA,IACAH,EACA,CAAA,SAAAC,EAAAG,EAAA,CACA,cAAAP,EACA,aAAAC,CAAA,CAAA,EAEA,CACA,CAAA,CAAA,iFCZA,MAAAO,EAAAC,EAAAC,CAAA,EAEAC,EAAAC,GAEAR,EAAAD,EACA,CAAA,SAAAC,EAAAS,EAAA,CAAA,gBAAA,GACA,SAAAT,EAAAI,EAAA,CAAA,GAAAI,CAAA,CAAA,CAAA,CACA,CACA,CAAA,6ECRA,MAAAE,EAAAF,GAAA,CACA,MAAAG,EAAAC,EAAA,qBAAA,EAGA,OAAAC,EAAAC,EAAA,CACA,WAAAH,EACA,OAAAI,EAAA,QACA,MAAAb,EACA,yDACA,EACA,SAAAc,EAEA,SAAA,CAAAhB,EAAAO,EAAA,CAAA,GAAAC,EAAA,IACAV,EAAA,EAAA,CAAA,CAAA,CAAA,CAGA,kFClBA,KAAM,CAAE,QAAAmB,CAAS,EAAGC,EAEPC,EAAO,CAChB,GAAGC,EACH,QAASH,CAIb,EAEaI,EAAW,CACpB,GAAGC,EACH,GAAGC,EAAU,CACT,YACI,qJACJ,QAAS,OAAO,KAAKL,CAAwB,EAAE,IAC1CM,GAAYN,EAAyBM,CAAO,CAChD,EACD,SAAU,SAClB,CAAK,CACL;;;;"}