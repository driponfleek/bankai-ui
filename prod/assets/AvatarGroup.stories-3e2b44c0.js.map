{"version":3,"file":"AvatarGroup.stories-3e2b44c0.js","sources":["../../../components/avatars/src/AvatarGroup.jsx","../../stories/components/avatars/sections/avatar-group/SectionImplementation.jsx","../../stories/components/avatars/sections/avatar-group/SectionPlayground.jsx","../../stories/components/avatars/StoryAvatarGroup.jsx","../../stories/components/avatars/components/AvatarIcon.jsx","../../media/images/avatars/avatar01.jpg","../../media/images/avatars/avatar05.jpg","../../stories/components/avatars/mocks/avatarGroupMocks.js","../../stories/components/avatars/args/avatarGroupArgs.js"],"sourcesContent":["import { Children } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Avatar from './Avatar';\n\n// Styles\nimport './styles/avatar-group.scss';\n\nconst AvatarGroup = (props) => {\n    const { contextCls, shouldOverlap, avatars, children } = props;\n    const baseCls = 'bankai-avatar-group';\n    const modCls = {\n        [`${baseCls}--overlap`]: shouldOverlap,\n    };\n\n    return (\n        <span className={cx(baseCls, modCls, contextCls)}>\n            {children ||\n                Children.toArray(\n                    avatars.map((avatar) => <Avatar {...avatar} />),\n                )}\n        </span>\n    );\n};\n\nAvatarGroup.defaultProps = {\n    shouldOverlap: true,\n    avatars: [],\n};\n\nAvatarGroup.propTypes = {\n    contextCls: PropTypes.string,\n    shouldOverlap: PropTypes.bool,\n    avatars: PropTypes.arrayOf(\n        PropTypes.shape({\n            imgURL: PropTypes.string,\n        }),\n    ),\n};\n\nexport default AvatarGroup;\n","import { StorySection, SectionTitle } from '@driponfleek/bankai-lib-storybook';\nimport CompImportAndUsage from '../../../../../sb-components/docblocks/CompImportAndUsage';\n\n// Utils\nimport { getLocale } from '../../../../../utils/localeUtils';\n\nconst importCodeStr = `import { AvatarGroup } from '@driponfleek/bankai-ui-avatars';`;\n\nconst usageCodeStr = `const avatars = [\n    { imgURL: /media/images/avatars/avatar01.jpg },\n    { imgURL: /media/images/avatars/avatar05.jpg },\n    { children: 'DY' },\n];\n\n<AvatarGroup avatars={avatars} />`;\n\nconst SectionImplementation = () => {\n    return (\n        <StorySection>\n            <SectionTitle>{getLocale('titles.implementation')}</SectionTitle>\n            <StorySection>\n                <CompImportAndUsage\n                    importCodeStr={importCodeStr}\n                    usageCodeStr={usageCodeStr}\n                    shouldShowUsageCopy={false}\n                />\n            </StorySection>\n        </StorySection>\n    );\n};\n\nexport default SectionImplementation;\n","import { AvatarGroup } from '@driponfleek/bankai-ui-avatars';\nimport {\n    StorySection,\n    ComponentPreview,\n} from '@driponfleek/bankai-lib-storybook';\n\nconst SectionPlayground = (props) => {\n    return (\n        <StorySection>\n            <ComponentPreview shouldCheckA11Y>\n                <AvatarGroup {...props} />\n            </ComponentPreview>\n        </StorySection>\n    );\n};\n\nexport default SectionPlayground;\n","import { genSBBaseCls } from '@driponfleek/bankai-lib-storybook';\nimport { STORY_SUB_TITLE, PKG_JSON } from './const/storyConst';\nimport SectionImplementation from './sections/avatar-group/SectionImplementation';\nimport SectionPlayground from './sections/avatar-group/SectionPlayground';\nimport StoryLayout from '../../../sb-components/layout/StoryLayout';\n\n// Utils\nimport { getLocale } from '../../../utils/localeUtils';\n\nconst StoryAvatarGroup = (props) => {\n    const baseCls = genSBBaseCls('avatar-group');\n\n    return (\n        <StoryLayout\n            contextCls={baseCls}\n            pkgVer={PKG_JSON.version}\n            title={getLocale('stories.components.avatars.avatarGroup.title')}\n            subTitle={STORY_SUB_TITLE}\n        >\n            <SectionPlayground {...props} />\n            <SectionImplementation />\n        </StoryLayout>\n    );\n};\n\nexport default StoryAvatarGroup;\n","import { BankaiUser } from '@driponfleek/bankai-ui-icons';\n\nconst AvatarIcon = () => <BankaiUser />;\n\nexport default AvatarIcon;\n","export default \"__VITE_ASSET__54302826__\"","export default \"__VITE_ASSET__29f84969__\"","/* eslint-disable import/prefer-default-export */\nimport AvatarIcon from '../components/AvatarIcon';\nimport avatar01 from '../../../../media/images/avatars/avatar01.jpg';\nimport avatar05 from '../../../../media/images/avatars/avatar05.jpg';\nimport avatar07 from '../../../../media/images/avatars/avatar07.jpg';\n\nconst baseAvatarProps = {\n    hasBorder: true,\n};\n\nexport const avatars = [\n    {\n        ...baseAvatarProps,\n        imgURL: avatar01,\n    },\n    {\n        ...baseAvatarProps,\n        imgURL: avatar05,\n    },\n    {\n        ...baseAvatarProps,\n        children: 'DY',\n    },\n    {\n        ...baseAvatarProps,\n        imgURL: avatar07,\n    },\n    {\n        ...baseAvatarProps,\n        children: AvatarIcon(),\n    },\n];\n","import { boolArg, arrayArg } from '@driponfleek/bankai-lib-storybook';\nimport { avatars } from '../mocks/avatarGroupMocks';\nimport { contextClsArgType, contextClsArg } from '../../../../args/sharedArgs';\n\nexport const args = {\n    ...contextClsArg,\n    shouldOverlap: true,\n    avatars,\n};\n\nexport const argTypes = {\n    ...contextClsArgType,\n    ...boolArg({\n        defaultValue: true,\n        description: 'Use to overlap avatars.',\n        propName: 'shouldOverlap',\n    }),\n    ...arrayArg({\n        defaultValue: [],\n        description: 'Array of avatar data passed to the Avatar component.',\n        propName: 'avatars',\n    }),\n};\n"],"names":["AvatarGroup","props","contextCls","shouldOverlap","avatars","children","baseCls","modCls","jsx","cx","Children","avatar","Avatar","PropTypes","BankaiAvatarGroup","importCodeStr","usageCodeStr","SectionImplementation","StorySection","SectionTitle","getLocale","CompImportAndUsage","SectionPlayground","ComponentPreview","StoryAvatarGroup","genSBBaseCls","jsxs","StoryLayout","PKG_JSON","STORY_SUB_TITLE","AvatarIcon","BankaiUser","AvatarIcon$1","avatar01","avatar05","baseAvatarProps","avatar07","args","contextClsArg","argTypes","contextClsArgType","boolArg","arrayArg"],"mappings":"2oCAQA,MAAAA,EAAAC,GAAA,CACA,KAAA,CAAA,WAAAC,EAAA,cAAAC,EAAA,QAAAC,EAAA,SAAAC,GAAAJ,EACAK,EAAA,sBACAC,EAAA,CACA,CAAA,GAAAD,CAAA,WAAA,EAAAH,CAAA,EAIA,OAAAK,EAAA,QAAA,UAAAC,EAAAH,EAAAC,EAAAL,CAAA,EACA,SAAAG,GACAK,EAAA,SAAA,QACAN,EAAA,IAAAO,KAAAC,EAAA,CAAA,GAAAD,EAAA,CAAA,CAEA,CAAA,CAAA,CAEA,EAEAX,EAAA,aAAA,CACA,cAAA,GACA,QAAA,CAAA,CACA,EAEAA,EAAA,UAAA,CACA,WAAAa,EAAA,OACA,cAAAA,EAAA,KACA,QAAAA,EAAA,QACAA,EAAA,MAAA,CACA,OAAAA,EAAA,MAAA,CACA,CACA,CACA,EAEA,MAAAC,EAAAd,mZClCA,MAAAe,EAAA,gEAEAC,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAQAC,EAAA,MAEAC,EACA,CAAA,SAAA,CAAAV,EAAAW,EAAA,CAAA,SAAAC,EAAA,uBAAA,CAAA,CAAA,IACAF,EACA,CAAA,SAAAV,EAAAa,EAAA,CACA,cAAAN,EACA,aAAAC,EACA,oBAAA,EAAA,CAAA,EAEA,CACA,CAAA,CAAA,iFCrBA,MAAAM,EAAArB,GAEAO,EAAAU,EACA,CAAA,SAAAV,EAAAe,EAAA,CAAA,gBAAA,GACA,SAAAf,EAAAR,EAAA,CAAA,GAAAC,CAAA,CAAA,CAAA,CACA,CACA,CAAA,6ECHA,MAAAuB,EAAAvB,GAAA,CACA,MAAAK,EAAAmB,EAAA,cAAA,EAGA,OAAAC,EAAAC,EAAA,CACA,WAAArB,EACA,OAAAsB,EAAA,QACA,MAAAR,EAAA,8CAAA,EACA,SAAAS,EAEA,SAAA,CAAArB,EAAAc,EAAA,CAAA,GAAArB,EAAA,IACAgB,EAAA,EAAA,CAAA,CAAA,CAAA,CAGA,4ECrBA,MAAAa,EAAA,IAAAtB,EAAAuB,EAAA,CAAA,CAAA,EAEAC,EAAAF,sECJA,MAAeG,EAAA,GAAA,IAAA,IAAA,wBAAA,YAAA,GAAA,EAAA,KCAAC,EAAA,GAAA,IAAA,IAAA,wBAAA,YAAA,GAAA,EAAA,KCMTC,EAAkB,CACpB,UAAW,EACf,EAEa/B,EAAU,CACnB,CACI,GAAG+B,EACH,OAAQF,CACX,EACD,CACI,GAAGE,EACH,OAAQD,CACX,EACD,CACI,GAAGC,EACH,SAAU,IACb,EACD,CACI,GAAGA,EACH,OAAQC,CACX,EACD,CACI,GAAGD,EACH,SAAUL,EAAY,CACzB,CACL,EC3BaO,EAAO,CAChB,GAAGC,EACH,cAAe,GACf,QAAAlC,CACJ,EAEamC,EAAW,CACpB,GAAGC,EACH,GAAGC,EAAQ,CACP,aAAc,GACd,YAAa,0BACb,SAAU,eAClB,CAAK,EACD,GAAGC,EAAS,CACR,aAAc,CAAE,EAChB,YAAa,uDACb,SAAU,SAClB,CAAK,CACL;;;;"}