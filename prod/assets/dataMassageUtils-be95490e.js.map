{"version":3,"file":"dataMassageUtils-be95490e.js","sources":["../../../storybook-lib/src/utils/dataMassageUtils.js"],"sourcesContent":["import reactElementToJSXString from 'react-element-to-jsx-string';\n\nexport const getMassagedColorData = (color, colorName) => {\n    const {\n        hex,\n        tokenId,\n        evalsAgainstBGColor = {},\n        compatibleTextColors,\n        compatibleNonTextColors,\n        isDark,\n        lch,\n    } = color;\n    const evalKeys = Object.keys(evalsAgainstBGColor);\n    const { isA11yReadable, isA11yUICompatible, wcagContrast } =\n        evalsAgainstBGColor ?? {};\n    const hasFlags = evalKeys.indexOf('isA11yReadable') > -1;\n    const hasCompatIdArray = !!compatibleTextColors;\n    const { l: lightness } = lch ?? {};\n\n    return {\n        tokenId,\n        color: hex,\n        contrast: wcagContrast,\n        ...(hasCompatIdArray && {\n            compatibleTextColors,\n            compatibleNonTextColors,\n        }),\n        ...(hasFlags && { isA11yReadable, isA11yUICompatible }),\n        isDark,\n        lightness,\n        lch,\n        mainContent: colorName,\n        metaList: [hex],\n    };\n};\n\nexport const getMassagedColorVariantData = (\n    variants = [],\n    colorName = undefined,\n) => {\n    return variants.map((variant = {}) => {\n        const { tokenId } = variant;\n        const prefix = `${colorName} `;\n\n        return getMassagedColorData(\n            variant,\n            `${colorName ? prefix : ''}Variant ${tokenId}`,\n        );\n    });\n};\n\nexport const getCodeStrFromReactComponents = (components, ops) => {\n    if (!components) {\n        return '';\n    }\n\n    const options = {\n        skip: 0,\n        showFunctions: false,\n        enableBeautify: true,\n        showDefaultProps: false,\n        filterProps: (value) => value !== undefined,\n        ...ops,\n    };\n\n    return components\n        .map((comp) => reactElementToJSXString(comp, options))\n        .join('\\n')\n        .replace(/function\\s+noRefCheck\\(\\)\\s+\\{\\}/g, '() => {}');\n};\n"],"names":["getMassagedColorData","color","colorName","hex","tokenId","evalsAgainstBGColor","compatibleTextColors","compatibleNonTextColors","isDark","lch","evalKeys","isA11yReadable","isA11yUICompatible","wcagContrast","hasFlags","hasCompatIdArray","lightness","getMassagedColorVariantData","variants","variant","prefix","getCodeStrFromReactComponents","components","ops","options","value","comp","reactElementToJSXString"],"mappings":"wCAEY,MAACA,EAAuB,CAACC,EAAOC,IAAc,CACtD,KAAM,CACF,IAAAC,EACA,QAAAC,EACA,oBAAAC,EAAsB,CAAE,EACxB,qBAAAC,EACA,wBAAAC,EACA,OAAAC,EACA,IAAAC,CACH,EAAGR,EACES,EAAW,OAAO,KAAKL,CAAmB,EAC1C,CAAE,eAAAM,EAAgB,mBAAAC,EAAoB,aAAAC,CAAc,EACtDR,GAAuB,CAAA,EACrBS,EAAWJ,EAAS,QAAQ,gBAAgB,EAAI,GAChDK,EAAmB,CAAC,CAACT,EACrB,CAAE,EAAGU,GAAcP,GAAO,CAAA,EAEhC,MAAO,CACH,QAAAL,EACA,MAAOD,EACP,SAAUU,EACV,GAAIE,GAAoB,CACpB,qBAAAT,EACA,wBAAAC,CACZ,EACQ,GAAIO,GAAY,CAAE,eAAAH,EAAgB,mBAAAC,GAClC,OAAAJ,EACA,UAAAQ,EACA,IAAAP,EACA,YAAaP,EACb,SAAU,CAACC,CAAG,CACtB,CACA,EAEac,EAA8B,CACvCC,EAAW,CAAE,EACbhB,EAAY,SAELgB,EAAS,IAAI,CAACC,EAAU,CAAA,IAAO,CAClC,KAAM,CAAE,QAAAf,CAAS,EAAGe,EACdC,EAAS,GAAGlB,CAAS,IAE3B,OAAOF,EACHmB,EACA,GAAGjB,EAAYkB,EAAS,EAAE,WAAWhB,CAAO,EACxD,CACA,CAAK,EAGQiB,EAAgC,CAACC,EAAYC,IAAQ,CAC9D,GAAI,CAACD,EACD,MAAO,GAGX,MAAME,EAAU,CACZ,KAAM,EACN,cAAe,GACf,eAAgB,GAChB,iBAAkB,GAClB,YAAcC,GAAUA,IAAU,OAClC,GAAGF,CACX,EAEI,OAAOD,EACF,IAAKI,GAASC,EAAwBD,EAAMF,CAAO,CAAC,EACpD,KAAK;AAAA,CAAI,EACT,QAAQ,oCAAqC,UAAU,CAChE"}