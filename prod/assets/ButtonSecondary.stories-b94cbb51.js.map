{"version":3,"file":"ButtonSecondary.stories-b94cbb51.js","sources":["../../stories/components/buttons/sections/button-secondary/SectionOverview.jsx","../../stories/components/buttons/sections/button-secondary/SectionWhenToUse.jsx","../../stories/components/buttons/sections/button-secondary/SectionWhenToAvoid.jsx","../../stories/components/buttons/sections/button-secondary/SectionDestructiveVariant.jsx","../../stories/components/buttons/sections/button-secondary/SectionUsage.jsx","../../stories/components/buttons/StoryButtonSecondary.jsx"],"sourcesContent":["import { Paragraph } from '@driponfleek/bankai-ui-typography';\nimport { StorySection, SectionTitle } from '@driponfleek/bankai-lib-storybook';\n\nconst SectionOverview = () => {\n    return (\n        <StorySection>\n            <SectionTitle>Overview</SectionTitle>\n            <Paragraph>\n                The secondary button complements the primary action, providing\n                users with an alternative option that is typically less\n                prominent. While it doesn&apos;t carry the same weight as the\n                primary button, the secondary button serves as a valuable\n                addition for less critical actions or alternative pathways\n                within the user interface.\n            </Paragraph>\n        </StorySection>\n    );\n};\n\nexport default SectionOverview;\n","import { OmniList, OmniListItem } from '@driponfleek/bankai-ui-typography';\nimport { StorySection, SectionTitle } from '@driponfleek/bankai-lib-storybook';\n\nconst SectionWhenToUse = () => {\n    return (\n        <StorySection>\n            <SectionTitle headingLvl={3}>\n                When to Use Secondary Buttons\n            </SectionTitle>\n            <StorySection>\n                <OmniList>\n                    <OmniListItem>\n                        <strong>Supporting Actions&#58;</strong> Use the\n                        secondary button for actions that are supplementary or\n                        less critical than the primary action on the page.\n                    </OmniListItem>\n                    <OmniListItem>\n                        <strong>Alternative Pathways&#58;</strong> Employ the\n                        secondary button for secondary pathways or alternative\n                        options, providing users with choices without\n                        overshadowing the primary call-to-action.\n                    </OmniListItem>\n                </OmniList>\n            </StorySection>\n        </StorySection>\n    );\n};\n\nexport default SectionWhenToUse;\n","import { OmniList, OmniListItem } from '@driponfleek/bankai-ui-typography';\nimport { StorySection, SectionTitle } from '@driponfleek/bankai-lib-storybook';\n\nconst SectionWhenToAvoid = () => {\n    return (\n        <StorySection>\n            <SectionTitle headingLvl={3}>\n                When to Avoid Primary Buttons\n            </SectionTitle>\n            <StorySection>\n                <OmniList>\n                    <OmniListItem>\n                        <strong>Overemphasis&#58;</strong> Avoid using the\n                        secondary button when its presence may lead to an\n                        unintended emphasis on a less critical action. Reserve\n                        it for scenarios where users are likely to prioritize\n                        the primary action.\n                    </OmniListItem>\n                    <OmniListItem>\n                        <strong>Confusion&#58;</strong> Steer clear of\n                        incorporating secondary buttons when their presence\n                        might confuse users about the primary course of action.\n                        Ensure a clear hierarchy between primary and secondary\n                        actions to prevent user uncertainty.\n                    </OmniListItem>\n                </OmniList>\n            </StorySection>\n        </StorySection>\n    );\n};\n\nexport default SectionWhenToAvoid;\n","import { ButtonSecondary } from '@driponfleek/bankai-ui-buttons';\nimport { Paragraph } from '@driponfleek/bankai-ui-typography';\nimport {\n    ComponentPreviewWithCodeBlock,\n    StorySection,\n    SectionTitle,\n} from '@driponfleek/bankai-lib-storybook';\nimport DestructiveButtonUsage from '../../components/DestructiveButtonUsage';\n\nconst SectionDestructiveVariant = () => {\n    return (\n        <StorySection>\n            <SectionTitle headingLvl={3}>\n                Secondary Destructive Buttons\n            </SectionTitle>\n            <StorySection>\n                <ComponentPreviewWithCodeBlock shouldShowCopy={false}>\n                    <ButtonSecondary text=\"Delete\" isDestructive />\n                </ComponentPreviewWithCodeBlock>\n                <DestructiveButtonUsage />\n                <Paragraph>\n                    Opt for the secondary destructive button when the primary\n                    focus is on a different action, but there is still a need\n                    for users to confirm a potentially risky operation. This\n                    maintains consistency while allowing users to distinguish\n                    between the primary and secondary actions based on their\n                    importance in the overall user experience.\n                </Paragraph>\n            </StorySection>\n        </StorySection>\n    );\n};\n\nexport default SectionDestructiveVariant;\n","// import { LinkButton } from '@driponfleek/bankai-ui-buttons';\nimport {\n    StorySection,\n    SectionTitle,\n    // CodeTag,\n} from '@driponfleek/bankai-lib-storybook';\n// import { linkTo } from '@storybook/addon-links';\nimport SectionWhenToUse from './SectionWhenToUse';\nimport SectionWhenToAvoid from './SectionWhenToAvoid';\nimport SectionDestructiveVariant from './SectionDestructiveVariant';\n\n// Utils\nimport { getLocale } from '../../../../../utils/localeUtils';\n\n// TODO: Need to add destructive button\nconst SectionUsage = () => {\n    return (\n        <StorySection>\n            <SectionTitle>{getLocale('titles.usage')}</SectionTitle>\n            {/* <StorySection>\n                <Paragraph>\n                    Primary Buttons are the powerhouses of your user interface,\n                    designed to draw attention to the most critical actions in\n                    your application. By using Primary Buttons strategically,\n                    you guide users towards key tasks, such as submitting forms,\n                    confirming decisions, or initiating primary actions. Their\n                    distinct styling and clarity make them ideal for\n                    highlighting primary objectives, ensuring that users can\n                    readily engage with the most essential functions of your\n                    application. Understanding when and how to use Primary\n                    Buttons is vital to create a user-friendly and effective\n                    interface.\n                </Paragraph>\n            </StorySection> */}\n            <SectionWhenToUse />\n            <SectionWhenToAvoid />\n            <SectionDestructiveVariant />\n        </StorySection>\n    );\n};\n\nexport default SectionUsage;\n","import { genSBBaseCls } from '@driponfleek/bankai-lib-storybook';\nimport { getBtnStoryPlaygroundComp } from './utils/storyUtils';\nimport {\n    BTNS_STORY_SUB_TITLE,\n    PKG_JSON,\n    BUTTON_VARIANTS,\n} from './const/storyConst';\nimport SectionPlayground from './sections/SectionPlayground';\nimport SectionOverview from './sections/button-secondary/SectionOverview';\nimport SectionImplementation from './sections/SectionImplementation';\nimport SectionUsage from './sections/button-secondary/SectionUsage';\nimport StoryLayout from '../../../sb-components/layout/StoryLayout';\n\n// Utils\nimport { getLocale } from '../../../utils/localeUtils';\n\nconst { SECONDARY } = BUTTON_VARIANTS;\n\nconst StoryButtonSecondary = (props) => {\n    const baseCls = genSBBaseCls('button-secondary');\n\n    return (\n        <StoryLayout\n            contextCls={baseCls}\n            pkgVer={PKG_JSON.version}\n            title={getLocale(\n                'stories.components.buttons.buttonSecondary.title',\n            )}\n            subTitle={BTNS_STORY_SUB_TITLE}\n        >\n            <SectionPlayground\n                {...props}\n                variant={SECONDARY}\n                getPlaygroundComp={getBtnStoryPlaygroundComp}\n            />\n            <SectionOverview />\n            <SectionImplementation {...props} variant=\"Secondary\" />\n            <SectionUsage />\n        </StoryLayout>\n    );\n};\n\nexport default StoryButtonSecondary;\n"],"names":["SectionOverview","StorySection","jsx","SectionTitle","Paragraph","SectionWhenToUse","jsxs","OmniList","OmniListItem","SectionWhenToAvoid","SectionDestructiveVariant","ComponentPreviewWithCodeBlock","ButtonSecondary","DestructiveButtonUsage","SectionUsage","getLocale","SECONDARY","BUTTON_VARIANTS","StoryButtonSecondary","props","baseCls","genSBBaseCls","StoryLayout","PKG_JSON","BTNS_STORY_SUB_TITLE","SectionPlayground","getBtnStoryPlaygroundComp","SectionImplementation"],"mappings":"68CAGA,MAAAA,EAAA,MAEAC,EACA,CAAA,SAAA,CAAAC,EAAAC,GAAA,SAAA,UAAA,CAAA,EACAD,EAAAE,GAAA,SAOA,iUAAA,CAAA,CACA,CAAA,CAAA,2ECZA,MAAAC,EAAA,MAEAJ,EACA,CAAA,SAAA,CAAAC,EAAAC,EAAA,CAAA,WAAA,EAAA,SAEA,gCAAA,EACAD,EAAAD,EACA,CAAA,SAAAK,EAAAC,EACA,CAAA,SAAA,CAAAD,EAAAE,EACA,CAAA,SAAA,CAAAN,EAAA,UAAA,SAAA,qBAAA,CAAA,EAAA,oHAAA,EAGA,IACAM,EACA,CAAA,SAAA,CAAAN,EAAA,UAAA,SAAA,uBAAA,CAAA,EAAA,4JAAA,EAIA,CAAA,CAAA,CACA,CACA,CAAA,CACA,CAAA,CAAA,4ECrBA,MAAAO,EAAA,MAEAR,EACA,CAAA,SAAA,CAAAC,EAAAC,EAAA,CAAA,WAAA,EAAA,SAEA,gCAAA,EACAD,EAAAD,EACA,CAAA,SAAAK,EAAAC,EACA,CAAA,SAAA,CAAAD,EAAAE,EACA,CAAA,SAAA,CAAAN,EAAA,UAAA,SAAA,eAAA,CAAA,EAAA,qMAAA,EAKA,IACAM,EACA,CAAA,SAAA,CAAAN,EAAA,UAAA,SAAA,YAAA,CAAA,EAAA,yNAAA,EAKA,CAAA,CAAA,CACA,CACA,CAAA,CACA,CAAA,CAAA,8EClBA,MAAAQ,EAAA,MAEAT,EACA,CAAA,SAAA,CAAAC,EAAAC,EAAA,CAAA,WAAA,EAAA,SAEA,gCAAA,IACAF,EACA,CAAA,SAAA,CAAAC,EAAAS,EAAA,CAAA,eAAA,GACA,SAAAT,EAAAU,GAAA,KAAA,SAAA,cAAA,EAAA,CAAA,CACA,CAAA,IACAC,EAAA,EAAA,EACAX,EAAAE,GAAA,SAOA,4UAAA,CAAA,CAAA,EACA,CACA,CAAA,CAAA,qFCdA,MAAAU,EAAA,MAEAb,EACA,CAAA,SAAA,CAAAC,EAAAC,EAAA,CAAA,SAAAY,EAAA,cAAA,CAAA,CAAA,IAgBAV,EAAA,EAAA,IACAI,EAAA,EAAA,IACAC,EAAA,EAAA,CACA,CAAA,CAAA,wECrBA,KAAA,CAAA,UAAAM,CAAA,EAAAC,EAEAC,EAAAC,GAAA,CACA,MAAAC,EAAAC,EAAA,kBAAA,EAGA,OAAAf,EAAAgB,EAAA,CACA,WAAAF,EACA,OAAAG,EAAA,QACA,MAAAR,EACA,kDACA,EACA,SAAAS,EAEA,SAAA,CAAAtB,EAAAuB,EAAA,CACA,GAAAN,EACA,QAAAH,EACA,kBAAAU,CAAA,CACA,IACA1B,EAAA,EAAA,EACAE,EAAAyB,EAAA,CAAA,GAAAR,EAAA,QAAA,WAAA,CAAA,IACAL,EAAA,EAAA,CAAA,CAAA,CAAA,CAGA;;;"}