{"version":3,"file":"Color.stories-c41a1679.js","sources":["../../stories/foundation/colors/sections/core/SectionWhenToUseNeutrals.jsx","../../stories/foundation/colors/components/ColorPaletteList.jsx","../../stories/foundation/colors/sections/core/SectionNeutrals.jsx","../../stories/foundation/colors/StoryColorCore.jsx","../../stories/foundation/colors/sections/semantic/SectionIntro.jsx","../../stories/foundation/colors/StoryColorSemantic.jsx"],"sourcesContent":["import {\n    StorySection,\n    SectionTitle,\n    CodeTag,\n    genSBBaseCls,\n} from '@driponfleek/bankai-lib-storybook';\nimport {\n    Paragraph,\n    OmniList,\n    OmniListItem,\n} from '@driponfleek/bankai-ui-typography';\n\nconst SectionWhenToUseNeutrals = () => {\n    return (\n        <StorySection contextCls={genSBBaseCls('color-swatch-list')}>\n            <SectionTitle headingLvl={3}>When to Use Neutrals</SectionTitle>\n            <Paragraph>Neutrals are suitable for&#58;</Paragraph>\n            <OmniList>\n                <OmniListItem>Text</OmniListItem>\n                <OmniListItem>Backgrounds</OmniListItem>\n                <OmniListItem>Borders and Dividers</OmniListItem>\n                <OmniListItem>Disabled Elements</OmniListItem>\n            </OmniList>\n            <Paragraph>\n                <strong>Never use Neutral Color design tokens directly.</strong>{' '}\n                When you need a neutral color, consider these as the available\n                options for semantic and component token aliases. For example,\n                instead of using <CodeTag>core.color.neutral.100</CodeTag> as a\n                page background, use it as the seed value for a semantic design\n                token such as <CodeTag>semantic.color.canvas</CodeTag> and use\n                the semantic design token instead.\n            </Paragraph>\n        </StorySection>\n    );\n};\n\nexport default SectionWhenToUseNeutrals;\n","import { Children, useMemo } from 'react';\nimport { ColorSwatch, genSBBaseCls } from '@driponfleek/bankai-lib-storybook';\n\n// Styles\nimport './styles/color-palette-list.scss';\n\nconst ColorPaletteList = ({ listData = [] }) => (\n    <div className={genSBBaseCls('color-palette-list')}>\n        {Children.toArray(\n            useMemo(\n                () =>\n                    listData.map((color) => <ColorSwatch {...color} isCard />),\n                [listData],\n            ),\n        )}\n    </div>\n);\n\nexport default ColorPaletteList;\n","import {\n    StorySection,\n    SectionTitle,\n    genSBBaseCls,\n} from '@driponfleek/bankai-lib-storybook';\nimport {\n    genCustomNeutralColors,\n    massageConstToDotNotation,\n} from '@driponfleek/bankai-lib-theme-utils';\nimport SectionWhenToUseNeutrals from './SectionWhenToUseNeutrals';\nimport ColorPaletteList from '../../components/ColorPaletteList';\n\nconst SectionNeutrals = () => {\n    const neutralColors = genCustomNeutralColors();\n    const listData = Object.keys(neutralColors).map((neutralKey) => ({\n        mainContent: `Neutral ${neutralKey.replace('core.color.neutral.', '')}`,\n        color: neutralColors[neutralKey],\n        metaList: [\n            massageConstToDotNotation(neutralKey),\n            neutralColors[neutralKey],\n        ],\n    }));\n\n    return (\n        <StorySection contextCls={genSBBaseCls('color-swatch-list')}>\n            <SectionTitle>Neutrals</SectionTitle>\n            <StorySection>\n                <ColorPaletteList listData={listData} />\n            </StorySection>\n            <SectionWhenToUseNeutrals />\n        </StorySection>\n    );\n};\n\nexport default SectionNeutrals;\n","import { genSBBaseCls } from '@driponfleek/bankai-lib-storybook';\nimport SectionNeutrals from './sections/core/SectionNeutrals';\nimport StoryLayout from '../../../sb-components/layout/StoryLayout';\n\nimport { getLocale } from '../../../utils/localeUtils';\nimport { getFoundationTitle } from '../../../utils/storiesConfigUtils';\n\nconst StoryColorCore = () => {\n    const baseCls = genSBBaseCls('foundation-color-core');\n\n    return (\n        <StoryLayout\n            contextCls={baseCls}\n            title={getLocale('stories.foundation.color.core.title')}\n            subTitle={getFoundationTitle(\n                getLocale('stories.foundation.color.categoryTitle'),\n            )}\n        >\n            <SectionNeutrals />\n        </StoryLayout>\n    );\n};\n\nexport default StoryColorCore;\n","import {\n    StorySection,\n    // SectionTitle,\n    genSBBaseCls,\n} from '@driponfleek/bankai-lib-storybook';\nimport {\n    Paragraph,\n    // OmniList,\n    // OmniListItem,\n} from '@driponfleek/bankai-ui-typography';\n\nconst SectionIntro = () => {\n    return (\n        <StorySection contextCls={genSBBaseCls('color-swatch-list')}>\n            <Paragraph>Coming Soon.</Paragraph>\n        </StorySection>\n    );\n};\n\nexport default SectionIntro;\n","import { genSBBaseCls } from '@driponfleek/bankai-lib-storybook';\nimport SectionIntro from './sections/semantic/SectionIntro';\nimport StoryLayout from '../../../sb-components/layout/StoryLayout';\n\nimport { getLocale } from '../../../utils/localeUtils';\nimport { getFoundationTitle } from '../../../utils/storiesConfigUtils';\n\nconst StoryColorSemantic = () => {\n    const baseCls = genSBBaseCls('foundation-color-semantic');\n\n    return (\n        <StoryLayout\n            contextCls={baseCls}\n            title={getLocale('stories.foundation.color.semantic.title')}\n            subTitle={getFoundationTitle(\n                getLocale('stories.foundation.color.categoryTitle'),\n            )}\n        >\n            <SectionIntro />\n        </StoryLayout>\n    );\n};\n\nexport default StoryColorSemantic;\n"],"names":["SectionWhenToUseNeutrals","jsxs","StorySection","genSBBaseCls","jsx","SectionTitle","Paragraph","OmniList","OmniListItem","CodeTag","ColorPaletteList","listData","Children","useMemo","color","ColorSwatch","SectionNeutrals","neutralColors","genCustomNeutralColors","neutralKey","massageConstToDotNotation","StoryColorCore","baseCls","StoryLayout","getLocale","getFoundationTitle","SectionIntro","StoryColorSemantic"],"mappings":"4xBAYA,MAAAA,EAAA,IAEAC,EAAAC,EAAA,CAAA,WAAAC,EAAA,mBAAA,EACA,SAAA,CAAAC,EAAAC,EAAA,CAAA,WAAA,EAAA,SAAA,uBAAA,EACAD,EAAAE,GAAA,SAAA,4BAAA,CAAA,IACAC,EACA,CAAA,SAAA,CAAAH,EAAAI,GAAA,SAAA,MAAA,CAAA,EACAJ,EAAAI,GAAA,SAAA,aAAA,CAAA,EACAJ,EAAAI,GAAA,SAAA,sBAAA,CAAA,EACAJ,EAAAI,GAAA,SAAA,mBAAA,CAAA,CAAA,EACA,IACAF,EACA,CAAA,SAAA,CAAAF,EAAA,UAAA,SAAA,iDAAA,CAAA,EAAA,IAAA,kJAGAA,EAAAK,GAAA,SAAA,wBAAA,CAAA,EAAA,uFAEAL,EAAAK,GAAA,SAAA,uBAAA,CAAA,EAAA,6CAAA,EAEA,CACA,CAAA,CAAA,oFC1BA,MAAAC,EAAA,CAAA,CAAA,SAAAC,EAAA,CAAA,CAAA,IACAP,EAAA,MAAA,CAAA,UAAAD,EAAA,oBAAA,EACA,SAAAS,EAAA,SAAA,QACAC,EAAA,QACA,IACAF,EAAA,IAAAG,GAAAV,EAAAW,EAAA,CAAA,GAAAD,EAAA,OAAA,EAAA,CAAA,CAAA,EACA,CAAAH,CAAA,CACA,CACA,CACA,CAAA,iJCHA,MAAAK,EAAA,IAAA,CACA,MAAAC,EAAAC,IACAP,EAAA,OAAA,KAAAM,CAAA,EAAA,IAAAE,IAAA,CACA,YAAA,WAAAA,EAAA,QAAA,sBAAA,EAAA,CAAA,GACA,MAAAF,EAAAE,CAAA,EACA,SAAA,CACAC,EAAAD,CAAA,EACAF,EAAAE,CAAA,CACA,CACA,EAAA,EAEA,OACAlB,EAAAC,EAAA,CAAA,WAAAC,EAAA,mBAAA,EACA,SAAA,CAAAC,EAAAC,GAAA,SAAA,UAAA,CAAA,EACAD,EAAAF,EAAA,CACA,SAAAE,EAAAM,EAAA,CAAA,SAAAC,CAAA,CAAA,EACA,IACAX,EAAA,EAAA,CACA,CAAA,CAAA,CAEA,2ECzBA,MAAAqB,EAAA,IAAA,CACA,MAAAC,EAAAnB,EAAA,uBAAA,EAGA,OAAAC,EAAAmB,EAAA,CACA,WAAAD,EACA,MAAAE,EAAA,qCAAA,EACA,SAAAC,EACAD,EAAA,wCAAA,CACA,EAEA,WAAAR,EAAA,EAAA,CAAA,CAAA,CAGA,0ECVA,MAAAU,EAAA,IAEAtB,EAAAF,GAAA,WAAAC,EAAA,mBAAA,EACA,SAAAC,EAAAE,EAAA,CAAA,SAAA,cAAA,CAAA,CACA,CAAA,wECRA,MAAAqB,EAAA,IAAA,CACA,MAAAL,EAAAnB,EAAA,2BAAA,EAGA,OAAAC,EAAAmB,EAAA,CACA,WAAAD,EACA,MAAAE,EAAA,yCAAA,EACA,SAAAC,EACAD,EAAA,wCAAA,CACA,EAEA,WAAAE,EAAA,EAAA,CAAA,CAAA,CAGA;;;;;;;;"}