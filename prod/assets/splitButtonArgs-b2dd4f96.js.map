{"version":3,"file":"splitButtonArgs-b2dd4f96.js","sources":["../../stories/components/buttons/sections/split-button/SectionImplementation.jsx","../../stories/components/buttons/args/splitButtonArgs.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { StorySection, SectionTitle } from '@driponfleek/bankai-lib-storybook';\nimport CompImportAndUsage from '../../../../../sb-components/docblocks/CompImportAndUsage';\n\n// Utils\nimport { getLocale } from '../../../../../utils/localeUtils';\n\nconst menuOptionsCodeStr = `const menuOptions = [\n    {\n        text: 'Edit',\n        value: 'EDIT_BUTTON',\n    },\n    {\n        text: 'Delete',\n        isDestructive: true,\n        value: 'DELETE_BUTTON',\n    },\n];`;\n\nconst SectionImplementation = (props) => {\n    const { variant } = props;\n    const importCodeStr = `import { SplitButton${variant} } from '@driponfleek/bankai-ui-buttons';`;\n    const usageCodeStr = `${menuOptionsCodeStr}\\n\\n<SplitButton${variant}\\n    mainButtonProps={{ text: 'Main Action' }}\\n    menuButtonProps={{ 'aria-label': 'More options' }}\\n    menuOptions={menuOptions}\\n/>`;\n\n    return (\n        <StorySection>\n            <SectionTitle>{getLocale('titles.implementation')}</SectionTitle>\n            <StorySection>\n                <CompImportAndUsage\n                    importCodeStr={importCodeStr}\n                    usageCodeStr={usageCodeStr}\n                    shouldShowUsageCopy={false}\n                />\n            </StorySection>\n        </StorySection>\n    );\n};\n\nSectionImplementation.defaultProps = {\n    variant: '',\n};\n\nSectionImplementation.propTypes = {\n    variant: PropTypes.string,\n};\n\nexport default SectionImplementation;\n","import { arrayArg } from '@driponfleek/bankai-lib-storybook';\n// import { getLocale } from '../../../../utils/localeUtils';\nimport {\n    contextClsArgType,\n    contextClsArg,\n    isDisabledArgType,\n} from '../../../../args/sharedArgs';\nimport menuOptions from '../mocks/menuButtonMocks';\n\nexport const args = {\n    ...contextClsArg,\n    isDisabled: false,\n    menuOptions,\n    mainButtonProps: {\n        text: 'Main Action',\n        isDisabled: false,\n    },\n    menuButtonProps: {\n        'aria-label': 'More options',\n        isDisabled: false,\n        onMenuToggle: () => Promise.resolve(),\n    },\n};\n\nexport const argTypes = {\n    ...contextClsArgType,\n    ...arrayArg({\n        // description: '',\n        propName: 'menuOptions',\n    }),\n    ...isDisabledArgType,\n};\n"],"names":["menuOptionsCodeStr","SectionImplementation","props","variant","importCodeStr","usageCodeStr","StorySection","jsx","SectionTitle","getLocale","CompImportAndUsage","PropTypes","args","contextClsArg","menuOptions","argTypes","contextClsArgType","arrayArg","isDisabledArgType"],"mappings":"uWAOA,MAAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAYAC,EAAAC,GAAA,CACA,KAAA,CAAA,QAAAC,CAAA,EAAAD,EACAE,EAAA,uBAAAD,CAAA,4CACAE,EAAA,GAAAL,CAAA;AAAA;AAAA,cAAAG,CAAA;AAAA;AAAA;AAAA;AAAA,IAEA,SACAG,EACA,CAAA,SAAA,CAAAC,EAAAC,EAAA,CAAA,SAAAC,EAAA,uBAAA,CAAA,CAAA,IACAH,EACA,CAAA,SAAAC,EAAAG,EAAA,CACA,cAAAN,EACA,aAAAC,EACA,oBAAA,EAAA,CAAA,EAEA,CACA,CAAA,CAAA,CAEA,EAEAJ,EAAA,aAAA,CACA,QAAA,EACA,EAEAA,EAAA,UAAA,CACA,QAAAU,EAAA,MACA,yLCnCY,MAACC,EAAO,CAChB,GAAGC,EACH,WAAY,GACZ,YAAAC,EACA,gBAAiB,CACb,KAAM,cACN,WAAY,EACf,EACD,gBAAiB,CACb,aAAc,eACd,WAAY,GACZ,aAAc,IAAM,QAAQ,QAAS,CACxC,CACL,EAEaC,EAAW,CACpB,GAAGC,EACH,GAAGC,EAAS,CAER,SAAU,aAClB,CAAK,EACD,GAAGC,CACP"}