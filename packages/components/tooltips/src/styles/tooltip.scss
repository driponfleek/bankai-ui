// ========================================================
// Dependencies
// ========================================================
@use '@driponfleek/bankai-lib-style-utils/src/styles/mixins/resets.scss';
@use '@driponfleek/bankai-lib-style-utils/src/styles/utils/unit-conversion-utils.scss';
@use '@driponfleek/bankai-lib-theme-utils/src/styles/mixins/effects.scss';
@use '@driponfleek/bankai-lib-theme-utils/src/styles/mixins/states.scss';
@use '@driponfleek/bankai-lib-theme-utils/src/styles/mixins/typography.scss';
@use '@driponfleek/bankai-lib-theme-utils/src/styles/utils/theme-utils.scss';
@use '@driponfleek/bankai-lib-theme-utils/src/styles/vars/core-radii-vars.scss' as radii-vars;
@use '@driponfleek/bankai-lib-theme-utils/src/styles/vars/core-spacing-vars.scss' as spacing-vars;
@import 'tippy.js/dist/tippy.css';

.bankai-tooltip, %bankai-tooltip {
    box-sizing: border-box;
    display: inline-block;

    &__trigger {
        @include resets.bankai-button-reset;
        @include states.bankai-focus-state-halo;
        @include states.bankai-disabled-state;
        box-sizing: border-box;
        display: inline-block;
    }

    &__content-container {
        > :first-child {
            margin-top: 0;
        }

        > :last-child {
            margin-bottom: 0;
        }
    }

    &[data-theme~='bankai'] {
        @include effects.bankai-shadow-elevation-high;
        background-color: var(--bankai-semantic-color-canvas, theme-utils.bankai-get-light-theme-map-value('semantic-color-canvas'));
        border-radius: var(--bankai-tooltip-border-radius, theme-utils.bankai-get-light-theme-map-value('tooltip-border-radius'));
        font-size: inherit;

        &.tippy-box {
            color: inherit;
        }

        > .tippy-content {
            @include typography.bankai-sub-text;
            padding: unit-conversion-utils.bankai-to-rem(spacing-vars.$bankai-core-spacing-04-x);
        }

        > .tippy-arrow {
            color: var(--bankai-semantic-color-canvas, theme-utils.bankai-get-light-theme-map-value('semantic-color-canvas'));

            &::before {
                transform: scale(2);
            }
        }
    }
}
