// ========================================================
// Dependencies
// ========================================================
@use 'sass:color';
@import '@driponfleek/bankai-lib-style-utils/src/styles/utils/unit-conversion-utils.scss';
@import '@driponfleek/bankai-lib-theme-utils/src/styles/mixins/states.scss';
@import '@driponfleek/bankai-lib-theme-utils/src/styles/utils/theme-utils.scss';
@import '@driponfleek/bankai-lib-theme-utils/src/styles/vars/core-spacing-vars.scss';
@import './rw-styles.scss';

@mixin bankai-rw-focus-state-halo($inner-color: var(--bankai-semantic-color-universal-focus-halo-inner, rgba(0, 0, 0, 0.8)), $outer-color: var(--bankai-semantic-color-focus-halo-outer, rgba(0, 0, 0, 0.6))) {
    @include bankai-focus-state-inner-outer-box-shadow($inner-color, $outer-color);
    border-color: $inner-color;
    transition: box-shadow 0.15s ease-in-out;
}

@mixin bankai-rw-list-option($base-cls: &) {
    color: var(--bankai-form-input-text-color, bankai-get-light-theme-map-value('form-input-text-color'));
    box-sizing: border-box;
    line-height: var(--bankai-semantic-typography-line-height, bankai-get-light-theme-map-value('semantic-typography-line-height'));
    padding: bankai-to-rem($bankai-core-spacing-02-x);

    &.rw-state-focus:not(.rw-state-selected),
    &:not(.rw-state-selected):hover {
        background-color: var(--bankai-semantic-color-hover-bg, bankai-get-light-theme-map-value('semantic-color-hover-bg'));
    }

    @at-root #{$base-cls}[data-intent='keyboard'] .rw-list-option.rw-state-focus:not(.rw-state-selected) {
        background-color: var(--bankai-semantic-color-hover-bg, bankai-get-light-theme-map-value('semantic-color-hover-bg'));
        border-color: transparent;
    }

    &.rw-state-selected {
        color: var(--bankai-form-menu-selected-text-color, bankai-get-light-theme-map-value('form-menu-selected-text-color'));
        background-color: var(--bankai-form-menu-selected-bg-color, bankai-get-light-theme-map-value('form-menu-selected-bg-color'));
        border-color: var(--bankai-form-menu-selected-bg-color, bankai-get-light-theme-map-value('form-menu-selected-bg-color'));

        &.rw-state-focus {
            color: var(--bankai-form-menu-selected-focus-text-color, bankai-get-light-theme-map-value('form-menu-selected-focus-text-color'));
            background-color: var(--bankai-form-menu-selected-focus-bg-color, bankai-get-light-theme-map-value('form-menu-selected-focus-bg-color'));
            border-color: var(--bankai-form-menu-selected-focus-bg-color, bankai-get-light-theme-map-value('form-menu-selected-focus-bg-color'));
        }
    }

    @media (hover: hover) {
        &:hover {
            border-color: transparent;
        }
    }
}

@mixin bankai-rw-list() {
    padding-top: 0;
    padding-bottom: 0;

    > :first-child {
        border-radius: calc(var(--bankai-form-menu-border-radius, bankai-get-light-theme-map-value('form-menu-border-radius')) - 1px) calc(var(--bankai-form-menu-border-radius, bankai-get-light-theme-map-value('form-menu-border-radius')) - 1px) 0 0;
    }

    > :last-child {
        border-radius: 0 0 calc(var(--bankai-form-menu-border-radius, bankai-get-light-theme-map-value('form-menu-border-radius')) - 1px) calc(var(--bankai-form-menu-border-radius, bankai-get-light-theme-map-value('form-menu-border-radius')) - 1px);
    }
}

@mixin bankai-rw-list-empty() {
    color: var(--bankai-semantic-color-text-alt, bankai-get-light-theme-map-value('semantic-color-text-alt'));
    font-style: italic;
    padding: bankai-to-rem($bankai-core-spacing-02-x);
}

@mixin bankai-floating-label-fix() {
    @at-root .bankai-floating-label-composer__control-container & {
        width: 100%;
    }
}
