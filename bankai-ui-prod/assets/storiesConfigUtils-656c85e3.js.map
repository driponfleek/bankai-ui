{"version":3,"file":"storiesConfigUtils-656c85e3.js","sources":["../../../storybook-lib/src/const/baseClsConst.js","../../../storybook-lib/src/utils/storiesConfigUtils.js"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\nexport const SB_BASE_CLS_PREFIX = 'bankai-sb-';\n","/* eslint-disable no-param-reassign */\n/* eslint-disable react/jsx-filename-extension */\nimport { SB_BASE_CLS_PREFIX } from '../const/baseClsConst';\n// import { BankaiHistory, BankaiReadme } from '@driponfleek/bankai-ui-icons';\n// import { Description } from '@storybook/addon-docs';\n// import DocsTabs from '../components/content/DocsTabs';\n\n// const CHANGELOG_ID = 'CHANGELOG';\n// const README_ID = 'README';\n// const renderReadmeIcon = (iconCls) => (\n//     <BankaiReadme contextCls={`${iconCls}`} />\n// );\n// const renderChangelogIcon = (iconCls) => (\n//     <BankaiHistory contextCls={`${iconCls}`} />\n// );\n\nexport const genSBBaseCls = (suffix = '') => `${SB_BASE_CLS_PREFIX}${suffix}`;\n\nexport const genPageBreadcrumb = (breadcrumbs = []) => {\n    if (breadcrumbs.length === 0) {\n        return '';\n    }\n\n    return breadcrumbs.join(' / ');\n};\n\nexport const storyConfig = (Story, config) => {\n    const {\n        hasA11Y = true,\n        hasActions = true,\n        shouldShowPanel = true,\n        storyName,\n        args,\n        argTypes,\n        docs,\n        // locale = {},\n        // renderMarkdown = (markdown) => markdown,\n    } = config || {};\n    // const { readMe, changeLog } = locale;\n    const decorators = [];\n    // const { Changelog, ReadMe } = docs || {};\n\n    if (storyName) {\n        // console.log('storyName: ', storyName);\n        Story.storyName = storyName;\n    }\n\n    if (args) {\n        Story.args = args;\n    }\n\n    if (argTypes) {\n        Story.argTypes = argTypes;\n    }\n\n    const parameters = {\n        a11y: {\n            disable: !hasA11Y,\n            element: '.bankai--sb-component-preview--check-a11y',\n        },\n        actions: {\n            disable: !hasActions,\n        },\n        // ...(docs && {\n        //     docs: {\n        //         page: () => (\n        //             <DocsTabs\n        //                 initialActiveTabId={ReadMe ? README_ID : CHANGELOG_ID}\n        //                 tabs={[\n        //                     ...(ReadMe\n        //                         ? [\n        //                               {\n        //                                   id: README_ID,\n        //                                   text: readMe,\n        //                                   renderIcon: renderReadmeIcon,\n        //                                   doc: renderMarkdown(ReadMe),\n        //                               },\n        //                           ]\n        //                         : []),\n        //                     ...(Changelog\n        //                         ? [\n        //                               {\n        //                                   id: CHANGELOG_ID,\n        //                                   text: changeLog,\n        //                                   renderIcon: renderChangelogIcon,\n        //                                   doc: renderMarkdown(Changelog),\n        //                               },\n        //                           ]\n        //                         : []),\n        //                 ]}\n        //             >\n        //                 {ReadMe && <Description>{ReadMe}</Description>}\n        //                 {Changelog && <Description>{Changelog}</Description>}\n        //             </DocsTabs>\n        //         ),\n        //     },\n        // }),\n        options: {\n            showPanel: shouldShowPanel,\n        },\n        previewTabs: {\n            canvas: {\n                hidden: false,\n            },\n            'storybook/docs/panel': {\n                hidden: !docs,\n            },\n        },\n        viewMode: 'story',\n    };\n\n    if (decorators.length > 0) {\n        Story.decorators = decorators;\n    }\n\n    // console.log('parameters: ', parameters);\n\n    Story.parameters = parameters;\n};\n\n// // export const storyConfig = (renderStory, config) => {\n// //     const {\n// //         hasA11Y = true,\n// //         hasActions = true,\n// //         shouldShowPanel = true,\n// //         storyName,\n// //         args,\n// //         argTypes,\n// //         docs,\n// //         // locale = {},\n// //         // renderMarkdown = (markdown) => markdown,\n// //     } = config || {};\n\n// //     const parameters = {\n// //         a11y: {\n// //             disable: !hasA11Y,\n// //             element: genSBBaseCls('component-preview--check-a11y'),\n// //         },\n// //         actions: {\n// //             disable: !hasActions,\n// //         },\n// //         // ...(docs && {\n// //         //     docs: {\n// //         //         page: () => (\n// //         //             <DocsTabs\n// //         //                 initialActiveTabId={ReadMe ? README_ID : CHANGELOG_ID}\n// //         //                 tabs={[\n// //         //                     ...(ReadMe\n// //         //                         ? [\n// //         //                               {\n// //         //                                   id: README_ID,\n// //         //                                   text: readMe,\n// //         //                                   renderIcon: renderReadmeIcon,\n// //         //                                   doc: renderMarkdown(ReadMe),\n// //         //                               },\n// //         //                           ]\n// //         //                         : []),\n// //         //                     ...(Changelog\n// //         //                         ? [\n// //         //                               {\n// //         //                                   id: CHANGELOG_ID,\n// //         //                                   text: changeLog,\n// //         //                                   renderIcon: renderChangelogIcon,\n// //         //                                   doc: renderMarkdown(Changelog),\n// //         //                               },\n// //         //                           ]\n// //         //                         : []),\n// //         //                 ]}\n// //         //             >\n// //         //                 {ReadMe && <Description>{ReadMe}</Description>}\n// //         //                 {Changelog && <Description>{Changelog}</Description>}\n// //         //             </DocsTabs>\n// //         //         ),\n// //         //     },\n// //         // }),\n// //         options: {\n// //             showPanel: shouldShowPanel,\n// //         },\n// //         previewTabs: {\n// //             canvas: {\n// //                 hidden: false,\n// //             },\n// //             'storybook/docs/panel': {\n// //                 hidden: !docs,\n// //             },\n// //         },\n// //         viewMode: 'story',\n// //     };\n\n// //     console.log('config: ', {\n// //         ...(storyName && { name: storyName }),\n// //         render: renderStory,\n// //         ...(args && { args }),\n// //         ...(argTypes && { argTypes }),\n// //         parameters,\n// //     });\n\n// //     return {\n// //         ...(storyName && { name: storyName }),\n// //         // render: renderStory,\n// //         // // ...(args && { args }),\n// //         // // ...(argTypes && { argTypes }),\n// //         parameters,\n// //     };\n// // };\n\n// export const storyConfig = (Story, config) => {\n//     const {\n//         hasA11Y = true,\n//         hasActions = true,\n//         shouldShowPanel = true,\n//         storyName,\n//         args,\n//         argTypes,\n//         docs,\n//         // locale = {},\n//         // renderMarkdown = (markdown) => markdown,\n//     } = config || {};\n//     // const { readMe, changeLog } = locale;\n//     const decorators = [];\n//     // const { Changelog, ReadMe } = docs || {};\n\n//     const parameters = {\n//         a11y: {\n//             disable: !hasA11Y,\n//             element: '.bankai--sb-component-preview--check-a11y',\n//         },\n//         actions: {\n//             disable: !hasActions,\n//         },\n//         // ...(docs && {\n//         //     docs: {\n//         //         page: () => (\n//         //             <DocsTabs\n//         //                 initialActiveTabId={ReadMe ? README_ID : CHANGELOG_ID}\n//         //                 tabs={[\n//         //                     ...(ReadMe\n//         //                         ? [\n//         //                               {\n//         //                                   id: README_ID,\n//         //                                   text: readMe,\n//         //                                   renderIcon: renderReadmeIcon,\n//         //                                   doc: renderMarkdown(ReadMe),\n//         //                               },\n//         //                           ]\n//         //                         : []),\n//         //                     ...(Changelog\n//         //                         ? [\n//         //                               {\n//         //                                   id: CHANGELOG_ID,\n//         //                                   text: changeLog,\n//         //                                   renderIcon: renderChangelogIcon,\n//         //                                   doc: renderMarkdown(Changelog),\n//         //                               },\n//         //                           ]\n//         //                         : []),\n//         //                 ]}\n//         //             >\n//         //                 {ReadMe && <Description>{ReadMe}</Description>}\n//         //                 {Changelog && <Description>{Changelog}</Description>}\n//         //             </DocsTabs>\n//         //         ),\n//         //     },\n//         // }),\n//         options: {\n//             showPanel: shouldShowPanel,\n//         },\n//         previewTabs: {\n//             canvas: {\n//                 hidden: false,\n//             },\n//             'storybook/docs/panel': {\n//                 hidden: !docs,\n//             },\n//         },\n//         viewMode: 'story',\n//     };\n\n//     // if (args) {\n//     //     Story.args = args;\n//     // }\n\n//     // if (argTypes) {\n//     //     Story.argTypes = argTypes;\n//     // }\n\n//     // if (decorators.length > 0) {\n//     //     Story.decorators = decorators;\n//     // }\n\n//     const storyWithConfig = {\n//         // render: Story,\n//         ...(args && { args }),\n//         ...(argTypes && { argTypes }),\n//         parameters,\n//     };\n\n//     console.log('storyWithConfig: ', storyWithConfig);\n\n//     return storyWithConfig;\n// };\n\n// export const storyConfig = (renderStory, config) => {\n//     const {\n//         hasA11Y = true,\n//         hasActions = true,\n//         shouldShowPanel = true,\n//         storyName,\n//         args,\n//         argTypes,\n//         docs,\n//         // locale = {},\n//         // renderMarkdown = (markdown) => markdown,\n//     } = config || {};\n\n//     const parameters = {\n//         a11y: {\n//             disable: !hasA11Y,\n//             element: genSBBaseCls('component-preview--check-a11y'),\n//         },\n//         actions: {\n//             disable: !hasActions,\n//         },\n//         // ...(docs && {\n//         //     docs: {\n//         //         page: () => (\n//         //             <DocsTabs\n//         //                 initialActiveTabId={ReadMe ? README_ID : CHANGELOG_ID}\n//         //                 tabs={[\n//         //                     ...(ReadMe\n//         //                         ? [\n//         //                               {\n//         //                                   id: README_ID,\n//         //                                   text: readMe,\n//         //                                   renderIcon: renderReadmeIcon,\n//         //                                   doc: renderMarkdown(ReadMe),\n//         //                               },\n//         //                           ]\n//         //                         : []),\n//         //                     ...(Changelog\n//         //                         ? [\n//         //                               {\n//         //                                   id: CHANGELOG_ID,\n//         //                                   text: changeLog,\n//         //                                   renderIcon: renderChangelogIcon,\n//         //                                   doc: renderMarkdown(Changelog),\n//         //                               },\n//         //                           ]\n//         //                         : []),\n//         //                 ]}\n//         //             >\n//         //                 {ReadMe && <Description>{ReadMe}</Description>}\n//         //                 {Changelog && <Description>{Changelog}</Description>}\n//         //             </DocsTabs>\n//         //         ),\n//         //     },\n//         // }),\n//         options: {\n//             showPanel: shouldShowPanel,\n//         },\n//         previewTabs: {\n//             canvas: {\n//                 hidden: false,\n//             },\n//             'storybook/docs/panel': {\n//                 hidden: !docs,\n//             },\n//         },\n//         viewMode: 'story',\n//     };\n\n//     console.log('config: ', {\n//         ...(storyName && { name: storyName }),\n//         render: renderStory,\n//         ...(args && { args }),\n//         ...(argTypes && { argTypes }),\n//         parameters,\n//     });\n\n//     return {\n//         ...(storyName && { name: storyName }),\n//         // render: renderStory,\n//         // // ...(args && { args }),\n//         // // ...(argTypes && { argTypes }),\n//         parameters,\n//     };\n// };\n"],"names":["SB_BASE_CLS_PREFIX","genSBBaseCls","suffix","genPageBreadcrumb","breadcrumbs"],"mappings":"AACY,MAACA,EAAqB,aCerBC,EAAe,CAACC,EAAS,KAAO,GAAGF,CAAkB,GAAGE,CAAM,GAE9DC,EAAoB,CAACC,EAAc,KACxCA,EAAY,SAAW,EAChB,GAGJA,EAAY,KAAK,KAAK"}