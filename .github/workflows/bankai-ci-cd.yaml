name: Bankai CI/CD

on:
  push:
    branches:
      - main
      - develop
      - feature/*
      - bugfix/*
  workflow_dispatch:
    inputs:
      type:
        description: 'Type of build(release/snapshot)'
        required: true
        default: 'snapshot'
jobs:
  setup-build-push:
    name: Setup, Build and Push to Github
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      packages: write
      id-token: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: setup variables
      id: vars
      shell: bash
      run: |
        echo "branch=${GITHUB_REF#refs/heads/}" >> "$GITHUB_OUTPUT"
        echo "sha_short=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
    - name: Build Project
      uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'
        cache: 'npm'
    - name: Install, Validate & Build
      run: |
        npm config set save-exact true
        npm config set legacy-peer-deps true
        npm ci
        npm run lint:js
        npm run lint:scss
        npm run test
        npm run build
        git status
    - name: publish-snapshot
      if: steps.vars.outputs.branch == 'main' && (github.event.inputs.type == '' || github.event.inputs.type == 'snapshot')
      run: |
        echo "@driponfleek:registry=https://npm.pkg.github.com/driponfleek" > ./.npmrc
        echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ./.npmrc
        npm run publish-snapshot -- --no-verify-access --preid alpha.${{ github.run_number }}

    - name: publish-release
      if: steps.vars.outputs.branch == 'main' && github.event.inputs.type == 'release'
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        echo "@driponfleek:registry=https://npm.pkg.github.com/driponfleek" > ./.npmrc
        echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ./.npmrc
        npm run publish-release
    - name: Deploy to Github Pages
      if: steps.vars.outputs.branch == 'main' || steps.vars.outputs.branch == 'develop'
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./packages/storybook/storybook-static
        destination_dir: ${{ github.ref_name == 'develop' && 'dev' || 'prod' }}


    # Simply extracts the project version from the supplied pom.xml
    # NOTE: It does not use maven for this, to prevent unexpected failures/updates/side effects
    - name: Get project version from package.json
      if: steps.vars.outputs.branch == 'main' && (github.event.inputs.type == '' || github.event.inputs.type == 'snapshot')
      id: get-version
      shell: bash
      run: |-
        VERSION=$(node -p "require('./package.json').version")
        echo "version=$VERSION" >> "$GITHUB_OUTPUT"

    - name: Show Version
      if: steps.vars.outputs.branch == 'main' && (github.event.inputs.type == '' || github.event.inputs.type == 'snapshot')
      run: |-
        echo "${{steps.get-version.outputs.version}}"

    # Output the fully specified location of the built image
    - name: Output full image
      if: steps.vars.outputs.branch == 'main' && (github.event.inputs.type == '' || github.event.inputs.type == 'snapshot')
      shell: bash
      run: echo ${{ steps.build-and-push.outputs.image-location }}

