{"version":3,"file":"FloatingLabelFormFieldComposer.stories-7a87eaf4.js","sources":["../../../components/form-elements/src/FLFormFieldComposer.jsx","../../stories/components/form-elements/sections/fl-form-field-composer/SectionImplementation.jsx","../../stories/components/form-elements/sections/fl-form-field-composer/SectionPlayground.jsx","../../stories/components/form-elements/StoryFLFormFieldComposer.jsx"],"sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { v4 as uuidv4 } from 'uuid';\nimport FFCLabel from './components/form-field-composer/FFCLabel';\nimport FFCHints from './components/form-field-composer/FFCHints';\n\n// Utils\nimport {\n    getHasLabel,\n    getHasError,\n    getShouldRenderHints,\n    getFLFFCHasVal,\n    getFLFFCSanatizedProps,\n    getFLFFCModCls,\n} from './utils/formFieldComposerUtils';\n\n// Styles\nimport './styles/fl-form-field-composer.scss';\n\nconst withFLFormField = (Comp) => {\n    const Wrapper = (props) => {\n        const {\n            contextCls,\n            id,\n            isDisabled,\n            renderBefore,\n            renderAfter,\n            onChange,\n            isReadOnly,\n        } = props;\n        const baseCls = 'bankai-fl-form-field-composer';\n        const [hasValue, setHasValue] = useState(getFLFFCHasVal(props));\n        const hasLabel = getHasLabel(props);\n        const hasError = getHasError(props);\n        const shouldRenderHints = getShouldRenderHints(props);\n        const fallbackId = `bankai-ffc-${uuidv4()}`;\n        const compId = id || fallbackId;\n        const errorId = `${compId}-error`;\n        const hintId = `${compId}-hint`;\n        const modCls = getFLFFCModCls(\n            {\n                isDisabled,\n                hasError,\n                isReadOnly,\n                hasValue,\n                hasLabel,\n            },\n            baseCls,\n        );\n        const compProps = getFLFFCSanatizedProps({\n            ...props,\n            hasError,\n            hasLabel,\n            errorId,\n            hintId,\n            id: compId,\n        });\n        const handleChange = (evt) => {\n            const newState = {};\n\n            if (evt?.target?.value !== undefined) {\n                const evtVal = evt?.target?.value?.trim();\n                newState.hasValue = evtVal.length > 0;\n            } else if (Array.isArray(evt)) {\n                newState.hasValue = evt.length > 0;\n            } else {\n                newState.hasValue = !!evt;\n            }\n\n            if (hasValue !== newState.hasValue) {\n                setHasValue(newState.hasValue);\n            }\n\n            if (onChange) {\n                onChange(evt);\n            }\n        };\n\n        return (\n            <div className={cx(baseCls, modCls, contextCls)}>\n                <div className={`${baseCls}__inner`}>\n                    <div className={`${baseCls}__content-container`}>\n                        {!!renderBefore && (\n                            <div\n                                className={`${baseCls}__before-content-container`}\n                            >\n                                {renderBefore()}\n                            </div>\n                        )}\n                        <div className={`${baseCls}__control-container`}>\n                            <div\n                                className={`${baseCls}__control-container-inner`}\n                            >\n                                <Comp {...compProps} onChange={handleChange} />\n                                {hasLabel && (\n                                    <FFCLabel\n                                        {...props}\n                                        id={compId}\n                                        baseCls={baseCls}\n                                    />\n                                )}\n                            </div>\n                        </div>\n                        {!!renderAfter && (\n                            <div\n                                className={`${baseCls}__after-content-container`}\n                            >\n                                {renderAfter()}\n                            </div>\n                        )}\n                    </div>\n                </div>\n                {shouldRenderHints && (\n                    <FFCHints\n                        {...props}\n                        baseCls={baseCls}\n                        errorId={errorId}\n                        hintId={hintId}\n                    />\n                )}\n            </div>\n        );\n    };\n\n    Wrapper.defaultProps = {\n        rwSuffix: '_input',\n        hasError: false,\n        isDisabled: false,\n        isReadOnly: false,\n        shouldIncludeError: true,\n        shouldIncludeHint: true,\n        onChange: () => Promise.resolve(),\n    };\n\n    Wrapper.propTypes = {\n        contextCls: PropTypes.string,\n        id: PropTypes.string,\n        'aria-label': PropTypes.string,\n        placeholder: PropTypes.string,\n        value: PropTypes.string,\n        rwSuffix: PropTypes.string,\n        hasError: PropTypes.bool,\n        isDisabled: PropTypes.bool,\n        isReadOnly: PropTypes.bool,\n        shouldIncludeError: PropTypes.bool,\n        shouldIncludeHint: PropTypes.bool,\n        errorProps: PropTypes.object,\n        hintProps: PropTypes.object,\n        labelProps: PropTypes.shape({\n            labelText: PropTypes.oneOfType([\n                PropTypes.string,\n                PropTypes.element,\n            ]),\n        }),\n        renderBefore: PropTypes.func,\n        renderAfter: PropTypes.func,\n        onChange: PropTypes.func,\n    };\n\n    return Wrapper;\n};\n\nconst FLFormFieldComposer = withFLFormField;\n\nexport default FLFormFieldComposer;\n","import { StorySection, SectionTitle } from '@driponfleek/bankai-lib-storybook';\nimport CompImportAndUsage from '../../../../../sb-components/docblocks/CompImportAndUsage';\n\n// Utils\nimport { getLocale } from '../../../../../utils/localeUtils';\n\nconst importCodeStr = `import { FLFormFieldComposer, TextInput } from '@driponfleek/bankai-ui-form-elements';`;\nconst usageCodeStr = `const TextField = FLFormFieldComposer(TextInput);\n\n<TextField labelProps={{ content: 'User Name' }} />`;\n\nconst SectionImplementation = () => {\n    return (\n        <StorySection>\n            <SectionTitle>{getLocale('titles.implementation')}</SectionTitle>\n            <StorySection>\n                <CompImportAndUsage\n                    importCodeStr={importCodeStr}\n                    usageCodeStr={usageCodeStr}\n                />\n            </StorySection>\n        </StorySection>\n    );\n};\n\nexport default SectionImplementation;\n","import {\n    FLFormFieldComposer,\n    TextInput,\n    Textarea,\n} from '@driponfleek/bankai-ui-form-elements';\nimport {\n    Combobox,\n    DatePicker,\n    Dropdown,\n    Multiselect,\n    NumberPicker,\n} from '@driponfleek/bankai-ui-form-elements-rw';\nimport {\n    StorySection,\n    ComponentPreview,\n} from '@driponfleek/bankai-lib-storybook';\n\nconst InputField = FLFormFieldComposer(TextInput);\nconst TextAreaField = FLFormFieldComposer(Textarea);\nconst ComboboxField = FLFormFieldComposer(Combobox);\nconst DatePickerField = FLFormFieldComposer(DatePicker);\nconst DropdownField = FLFormFieldComposer(Dropdown);\nconst MultiselectField = FLFormFieldComposer(Multiselect);\nconst NumberPickerField = FLFormFieldComposer(NumberPicker);\n\nconst SectionPlayground = (props) => {\n    return (\n        <StorySection>\n            <ComponentPreview shouldCheckA11Y>\n                <InputField {...props} />\n                <TextAreaField {...props} />\n                <ComboboxField {...props} />\n                <DatePickerField {...props} />\n                <DropdownField {...props} />\n                <MultiselectField {...props} />\n                <NumberPickerField {...props} />\n            </ComponentPreview>\n        </StorySection>\n    );\n};\n\nexport default SectionPlayground;\n","import { genSBBaseCls } from '@driponfleek/bankai-lib-storybook';\nimport { STORY_SUB_TITLE, PKG_JSON } from './const/storyConst';\nimport SectionImplementation from './sections/fl-form-field-composer/SectionImplementation';\nimport SectionPlayground from './sections/fl-form-field-composer/SectionPlayground';\nimport StoryLayout from '../../../sb-components/layout/StoryLayout';\n\n// Utils\nimport { getLocale } from '../../../utils/localeUtils';\n\nconst StoryFLFormFieldComposer = (props) => {\n    const baseCls = genSBBaseCls('fl-form-field-composer');\n\n    return (\n        <StoryLayout\n            contextCls={baseCls}\n            pkgVer={PKG_JSON.version}\n            title={getLocale(\n                'stories.components.formElements.flFormFieldComposer.title',\n            )}\n            subTitle={STORY_SUB_TITLE}\n        >\n            <SectionPlayground {...props} />\n            <SectionImplementation />\n        </StoryLayout>\n    );\n};\n\nexport default StoryFLFormFieldComposer;\n"],"names":["withFLFormField","Comp","Wrapper","props","contextCls","id","isDisabled","renderBefore","renderAfter","onChange","isReadOnly","baseCls","hasValue","setHasValue","useState","getFLFFCHasVal","hasLabel","getHasLabel","hasError","getHasError","shouldRenderHints","getShouldRenderHints","fallbackId","uuidv4","compId","errorId","hintId","modCls","getFLFFCModCls","compProps","getFLFFCSanatizedProps","handleChange","evt","newState","_a","evtVal","_c","_b","cx","jsx","jsxs","FFCLabel","FFCHints","PropTypes","FLFormFieldComposer","BankaiFLFormFieldComposer","importCodeStr","usageCodeStr","SectionImplementation","StorySection","SectionTitle","getLocale","CompImportAndUsage","InputField","TextInput","TextAreaField","Textarea","ComboboxField","Combobox","DatePickerField","DatePicker","DropdownField","Dropdown","MultiselectField","Multiselect","NumberPickerField","NumberPicker","SectionPlayground","ComponentPreview","StoryFLFormFieldComposer","genSBBaseCls","StoryLayout","PKG_JSON","STORY_SUB_TITLE"],"mappings":"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"}