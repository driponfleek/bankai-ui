{"version":3,"file":"FFCHints-99ba3213.js","sources":["../../../components/form-elements/node_modules/uuid/dist/esm-browser/rng.js","../../../components/form-elements/node_modules/uuid/dist/esm-browser/stringify.js","../../../components/form-elements/node_modules/uuid/dist/esm-browser/native.js","../../../components/form-elements/node_modules/uuid/dist/esm-browser/v4.js","../../../components/form-elements/src/const/formFieldComposerVariantsConst.js","../../../components/form-elements/src/utils/formFieldComposerUtils.js","../../../components/form-elements/src/FormLabel.jsx","../../../components/form-elements/src/components/form-field-composer/FFCLabel.jsx","../../../components/aria/src/utils/ariaLiveUtils.js","../../../components/aria/src/ARIALive.jsx","../../../components/form-elements/src/InlineFormHint.jsx","../../../components/form-elements/src/InlineFormError.jsx","../../../components/form-elements/src/components/form-field-composer/FFCHints.jsx"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","export default {\n    INLINE_LEFT: 'INLINE_LEFT',\n    INLINE_RIGHT: 'INLINE_RIGHT',\n    STACKED: 'STACKED',\n    STACKED_HINT_TOP: 'STACKED_HINT_TOP',\n};\n","// Constants\nimport VARIANTS from '../const/formFieldComposerVariantsConst';\n\nconst { INLINE_LEFT, INLINE_RIGHT, STACKED, STACKED_HINT_TOP } = VARIANTS;\n\nexport const getFormFieldComposerModCls = (props, baseCls) => {\n    const { variant, isDisabled, isReadOnly } = props ?? {};\n\n    return {\n        [`${baseCls}--disabled`]: isDisabled,\n        [`${baseCls}--inline-left`]: variant === INLINE_LEFT,\n        [`${baseCls}--inline-right`]: variant === INLINE_RIGHT,\n        [`${baseCls}--read-only`]: isReadOnly,\n        [`${baseCls}--stacked`]: variant === STACKED,\n        [`${baseCls}--stacked-hint-top`]: variant === STACKED_HINT_TOP,\n    };\n};\n\nexport const getFLFFCModCls = (props, baseCls) => {\n    const { isDisabled, isReadOnly, hasError, hasValue, hasLabel } =\n        props ?? {};\n\n    return {\n        [`${baseCls}--disabled`]: isDisabled,\n        [`${baseCls}--error`]: hasError,\n        [`${baseCls}--read-only`]: isReadOnly,\n        [`${baseCls}--has-value`]: hasValue,\n        [`${baseCls}--no-label`]: !hasLabel,\n    };\n};\n\nexport const getFFCLabelExtantProps = (props) => {\n    const { id, labelProps, rwSuffix } = props ?? {};\n\n    return {\n        ...labelProps,\n        htmlFor: `${id}${rwSuffix}`,\n    };\n};\n\nexport const getHasLabel = (props) => {\n    const { labelProps } = props ?? {};\n    const { content } = labelProps ?? {};\n\n    return !!content;\n};\n\nexport const getShouldRenderHints = (props) => {\n    const { shouldIncludeError, shouldIncludeHint } = props;\n\n    return shouldIncludeError || shouldIncludeHint;\n};\n\nexport const getFFCHasHint = (props) => {\n    const { hintProps } = props ?? {};\n    const { children, renderHint } = hintProps ?? {};\n\n    return !!children || !!renderHint;\n};\n\nexport const getHasError = (props) => {\n    const { hasError, errorProps } = props ?? {};\n    const { children, renderError } = errorProps ?? {};\n\n    return hasError || !!children || !!renderError;\n};\n\nexport const getCompARIADescByIds = (props) => {\n    const { shouldIncludeError, shouldIncludeHint, errorId, hintId } =\n        props ?? {};\n    const hasLabel = getHasLabel(props);\n\n    return [\n        ...(shouldIncludeError ? [errorId] : []),\n        ...(shouldIncludeHint && hasLabel ? [hintId] : []),\n    ].join(' ');\n};\n\nconst getCompExtantProps = (props) => {\n    const {\n        contextCls,\n        rwSuffix,\n        shouldIncludeError,\n        shouldIncludeHint,\n        errorProps,\n        hintProps,\n        labelProps,\n        errorId,\n        hintId,\n        id,\n        isReadOnly,\n        hasError,\n        ...rest\n    } = props;\n\n    return {\n        ...rest,\n        id: `${id}${rwSuffix}`,\n        ...(isReadOnly && { isReadOnly }),\n        ...(hasError && { hasError }),\n        ...((shouldIncludeError || shouldIncludeHint) && {\n            'aria-describedby': getCompARIADescByIds(props),\n        }),\n    };\n};\n\nexport const getFFCCompExtantProps = (props) => {\n    const { variant, ...rest } = getCompExtantProps(props);\n\n    return rest;\n};\n\nexport const getIFLFFCompExtantProps = (props) => {\n    const { renderBefore, renderAfter, isLeftAlignedLabel, ...rest } =\n        getCompExtantProps(props);\n\n    return rest;\n};\n\nexport const getFLFFCHasVal = (props) => {\n    const { value } = props ?? {};\n\n    // eslint-disable-next-line no-null/no-null\n    return value !== undefined && value !== null && value !== '';\n};\n\nexport const getFLFFCSanatizedProps = (props) => {\n    const {\n        contextCls,\n        'aria-label': ariaLabel,\n        placeholder,\n        rwSuffix,\n        shouldIncludeError,\n        shouldIncludeHint,\n        errorId,\n        hintId,\n        errorProps,\n        hintProps,\n        labelProps,\n        id,\n        isReadOnly,\n        hasError,\n        hasLabel,\n        renderBeforeControl,\n        renderAfterControl,\n        ...rest\n    } = props;\n\n    return {\n        ...rest,\n        id,\n        hasError,\n        ...(!hasLabel && { 'aria-label': ariaLabel, placeholder }),\n        ...(isReadOnly && { isReadOnly }),\n        ...((shouldIncludeError || shouldIncludeHint) && {\n            'aria-describedby': getCompARIADescByIds(props),\n        }),\n    };\n};\n","import PropTypes from 'prop-types';\nimport cx from 'classnames';\n\n// Styles\nimport './styles/form-label.scss';\n\nconst FormLabel = (props) => {\n    const { contextCls, htmlFor, content, ...rest } = props;\n    const baseCls = 'bankai-form-label';\n\n    return (\n        <label {...rest} className={cx(baseCls, contextCls)} htmlFor={htmlFor}>\n            <span className={`${baseCls}__content`}>{content}</span>\n        </label>\n    );\n};\n\nFormLabel.propTypes = {\n    contextCls: PropTypes.string,\n    htmlFor: PropTypes.string,\n    content: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.element,\n        PropTypes.node,\n    ]).isRequired,\n};\n\nexport default FormLabel;\n","import PropTypes from 'prop-types';\nimport FormLabel from '../../FormLabel';\n\n// Utils\nimport { getFFCLabelExtantProps } from '../../utils/formFieldComposerUtils';\n\nconst FFCLabel = (props) => {\n    const { baseCls, ...rest } = props;\n    const labelProps = getFFCLabelExtantProps(rest);\n\n    return (\n        <div className={`${baseCls}__label-container`}>\n            <div className={`${baseCls}__label-container-inner`}>\n                <FormLabel {...labelProps} />\n            </div>\n        </div>\n    );\n};\n\nFFCLabel.propTypes = {\n    baseCls: PropTypes.string,\n};\n\nexport default FFCLabel;\n","// https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-live\n// https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-relevant\n// https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-atomic\nexport const getARIALiveVal = (isPolite) => {\n    switch (true) {\n        case isPolite:\n            return 'polite';\n        case isPolite === false:\n            return 'assertive';\n        default:\n            // Same as returning 'off'\n            return undefined;\n    }\n};\n\nexport const getARIAExtantProps = (props) => {\n    const { isAtomic, isPolite, ariaRelevant } = props ?? {};\n    const ariaLive = getARIALiveVal(isPolite);\n\n    return {\n        ...(isAtomic !== undefined && { 'aria-atomic': isAtomic }),\n        ...(ariaLive && { 'aria-live': ariaLive }),\n        ...(ariaRelevant && { 'aria-relevant': ariaRelevant }),\n    };\n};\n","import PropTypes from 'prop-types';\nimport cx from 'classnames';\n\n// Utils\nimport { getARIAExtantProps } from './utils/ariaLiveUtils';\n\nconst ARIALive = (props) => {\n    const {\n        isAtomic,\n        ariaRelevant,\n        baseCls,\n        contextCls,\n        htmlTag: Wrapper,\n        isPolite,\n        children,\n        ...rest\n    } = props;\n    const ariaProps = getARIAExtantProps({\n        isAtomic,\n        ariaRelevant,\n        isPolite,\n    });\n\n    return (\n        <Wrapper {...rest} {...ariaProps} className={cx(baseCls, contextCls)}>\n            {children}\n        </Wrapper>\n    );\n};\n\nARIALive.defaultProps = {\n    htmlTag: 'span',\n};\n\nARIALive.propTypes = {\n    ariaRelevant: PropTypes.string,\n    baseCls: PropTypes.string,\n    contextCls: PropTypes.string,\n    htmlTag: PropTypes.string,\n    id: PropTypes.string,\n    isAtomic: PropTypes.bool,\n    isPolite: PropTypes.bool,\n};\n\nexport default ARIALive;\n","import PropTypes from 'prop-types';\nimport { ARIALive } from '@driponfleek/bankai-ui-aria';\n\n// Styles\nimport './styles/inline-form-hint.scss';\n\nconst InlineFormHint = (props) => {\n    const { contextCls, ariaLiveProps = {}, children } = props;\n    const baseCls = 'bankai-form-control-hint';\n    const { isAtomic = false, ...rest } = ariaLiveProps;\n    const ariaProps = {\n        isAtomic,\n        ...rest,\n    };\n\n    return (\n        <ARIALive {...ariaProps} baseCls={baseCls} contextCls={contextCls}>\n            {children && (\n                <span className={`${baseCls}__content`}>{children}</span>\n            )}\n        </ARIALive>\n    );\n};\n\nInlineFormHint.defaultProps = {};\n\nInlineFormHint.propTypes = {\n    contextCls: PropTypes.string,\n    ariaLiveProps: PropTypes.shape({\n        ariaRelevant: PropTypes.string,\n        id: PropTypes.string.isRequired,\n        isAtomic: PropTypes.bool,\n        isPolite: PropTypes.bool,\n    }),\n};\n\nexport default InlineFormHint;\n","import PropTypes from 'prop-types';\nimport { ARIALive } from '@driponfleek/bankai-ui-aria';\n\n// Styles\nimport './styles/inline-form-error.scss';\n\nconst InlineFormError = (props) => {\n    const { contextCls, ariaLiveProps = {}, renderErrorIcon, children } = props;\n    const {\n        isAtomic = true,\n        isPolite = false,\n        ariaRelevant,\n        ...rest\n    } = ariaLiveProps;\n    const baseCls = 'bankai-inline-form-error';\n    const ariaProps = {\n        isAtomic,\n        isPolite,\n        // https://hiddedevries.nl/en/blog/2017-04-04-how-to-make-inline-error-messages-accessible\n        // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions\n        ...(ariaRelevant && { ariaRelevant }),\n        ...(!ariaRelevant &&\n            !isPolite && { ariaRelevant: 'additions removals' }),\n        ...rest,\n    };\n\n    return (\n        <ARIALive {...ariaProps} baseCls={baseCls} contextCls={contextCls}>\n            {children && renderErrorIcon && (\n                <span className={`${baseCls}__icon-container`}>\n                    {renderErrorIcon({ contextCls: `${baseCls}__icon` })}\n                </span>\n            )}\n            {children && (\n                <span className={`${baseCls}__content`}>{children}</span>\n            )}\n        </ARIALive>\n    );\n};\n\nInlineFormError.defaultProps = {};\n\nInlineFormError.propTypes = {\n    contextCls: PropTypes.string,\n    ariaLiveProps: PropTypes.shape({\n        ariaRelevant: PropTypes.string,\n        id: PropTypes.string.isRequired,\n        isAtomic: PropTypes.bool,\n        isPolite: PropTypes.bool,\n    }),\n    renderErrorIcon: PropTypes.func,\n};\n\nexport default InlineFormError;\n","import PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport InlineFormHint from '../../InlineFormHint';\nimport InlineFormError from '../../InlineFormError';\n\nimport { getHasError, getFFCHasHint } from '../../utils/formFieldComposerUtils';\n\nconst FFCHints = (props) => {\n    const {\n        baseCls,\n        errorId,\n        shouldIncludeError,\n        shouldIncludeHint,\n        errorProps,\n        hintProps,\n    } = props;\n    const isDisplayingHint = getFFCHasHint(props) || getHasError(props);\n    const hintBaseCls = `${baseCls}__hints-container`;\n    const modCls = {\n        [`${hintBaseCls}--is-displaying-hint`]: isDisplayingHint,\n    };\n    const { children: hintChildren, ...hintPropsRest } = hintProps ?? {};\n    const { children: errorChildren } = errorProps ?? {};\n    const inlineHintProps = {\n        ...hintPropsRest,\n        ...(!errorChildren && {\n            ...(hintChildren && { children: hintChildren }),\n        }),\n    };\n\n    return (\n        <div className={cx(hintBaseCls, modCls)}>\n            {shouldIncludeError && (\n                <InlineFormError {...errorProps} id={errorId} />\n            )}\n            {shouldIncludeHint && <InlineFormHint {...inlineHintProps} />}\n        </div>\n    );\n};\n\nFFCHints.defaultProps = {\n    shouldIncludeError: false,\n    shouldIncludeHint: false,\n};\n\nFFCHints.propTypes = {\n    baseCls: PropTypes.string,\n    errorId: PropTypes.string,\n    hasError: PropTypes.bool,\n    shouldIncludeError: PropTypes.bool,\n    shouldIncludeHint: PropTypes.bool,\n    errorProps: PropTypes.object,\n    hintProps: PropTypes.object,\n};\n\nexport default FFCHints;\n"],"names":["getRandomValues","rnds8","rng","byteToHex","i","unsafeStringify","arr","offset","randomUUID","native","v4","options","buf","rnds","FORM_FIELD_COMP_VARIANTS","INLINE_LEFT","INLINE_RIGHT","STACKED","STACKED_HINT_TOP","VARIANTS","getFormFieldComposerModCls","props","baseCls","variant","isDisabled","isReadOnly","getFLFFCModCls","hasError","hasValue","hasLabel","getFFCLabelExtantProps","id","labelProps","rwSuffix","getHasLabel","content","getShouldRenderHints","shouldIncludeError","shouldIncludeHint","getFFCHasHint","hintProps","children","renderHint","getHasError","errorProps","renderError","getCompARIADescByIds","errorId","hintId","getCompExtantProps","contextCls","rest","getFFCCompExtantProps","getIFLFFCompExtantProps","renderBefore","renderAfter","isLeftAlignedLabel","getFLFFCHasVal","value","getFLFFCSanatizedProps","ariaLabel","placeholder","renderBeforeControl","renderAfterControl","FormLabel","htmlFor","cx","PropTypes","FormLabel$1","FFCLabel","jsx","FFCLabel$1","getARIALiveVal","isPolite","getARIAExtantProps","isAtomic","ariaRelevant","ariaLive","ARIALive","Wrapper","ariaProps","InlineFormHint","ariaLiveProps","InlineFormHint$1","InlineFormError","renderErrorIcon","jsxs","InlineFormError$1","FFCHints","isDisplayingHint","hintBaseCls","modCls","hintChildren","hintPropsRest","errorChildren","inlineHintProps","FFCHints$1"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}