{"version":3,"file":"CreatingColorVariants.stories-c455c5e4.js","sources":["../../stories/designers/working-with-color/sections/creating-color-variants/SectionIntro.jsx","../../stories/designers/working-with-color/sections/creating-color-variants/SectionWhyLCHHowHumansSeeColor.jsx","../../stories/designers/working-with-color/sections/creating-color-variants/SectionWhyLCHMakesAccessibilityEasier.jsx","../../stories/designers/working-with-color/sections/creating-color-variants/SectionWhyLCHHandlesTrickyColorsBetter.jsx","../../stories/designers/working-with-color/sections/creating-color-variants/SectionWhyLCH.jsx","../../stories/designers/working-with-color/sections/creating-color-variants/SectionHowWeGenerateVariants.jsx","../../stories/designers/working-with-color/sections/creating-color-variants/SectionFinalNoteToDesigners.jsx","../../stories/designers/working-with-color/sections/creating-color-variants/SectionFurtherReading.jsx","../../stories/designers/working-with-color/StoryCreatingColorVariants.jsx"],"sourcesContent":["import { Paragraph } from '@driponfleek/bankai-ui-typography';\nimport { StorySection } from '@driponfleek/bankai-lib-storybook';\n\nconst SectionIntro = () => (\n    <StorySection>\n        <Paragraph>\n            When generating color variants from a base color, the goal is to\n            create harmonious, perceptually balanced variations that feel\n            consistent and natural. To generate these variants, we use the LCH\n            color space&mdash;a modern and perceptually uniform approach that\n            makes your designs look better and work more effectively.\n        </Paragraph>\n    </StorySection>\n);\n\nexport default SectionIntro;\n","import {\n    Paragraph,\n    OmniList,\n    OmniListItem,\n} from '@driponfleek/bankai-ui-typography';\nimport { getLocale } from '../../../../../utils/localeUtils';\n\nconst SectionWhyLCHHowHumansSeeColor = () => (\n    <OmniListItem>\n        <strong>\n            {getLocale(\n                'stories.designers.workingWithColor.creatingColorVariants.sectionTitles.whyLCH.alignsWithHowHumansSeeColor',\n            )}\n        </strong>\n        <Paragraph>\n            LCH stands for Lightness, Chroma, and Hue, and it&apos;s designed to\n            match the way the human eye perceives color.\n        </Paragraph>\n        <OmniList>\n            <OmniListItem>\n                Adjusting Lightness in LCH produces smooth, natural changes that\n                feel balanced across different colors.\n            </OmniListItem>\n            <OmniListItem>\n                Colors remain harmonious and visually consistent when lightened\n                or darkened.\n            </OmniListItem>\n        </OmniList>\n        <Paragraph>In Other Methods (e.g., HSL)&#58;</Paragraph>\n        <OmniList>\n            <OmniListItem>\n                Lightening a color can result in washed-out or overly vibrant\n                tones.\n            </OmniListItem>\n            <OmniListItem>\n                Darkening colors like yellow can shift them to green or brown.\n            </OmniListItem>\n        </OmniList>\n        <Paragraph>\n            LCH Solves This by preserving the natural identity of the color.\n        </Paragraph>\n    </OmniListItem>\n);\n\nexport default SectionWhyLCHHowHumansSeeColor;\n","import {\n    Paragraph,\n    OmniList,\n    OmniListItem,\n} from '@driponfleek/bankai-ui-typography';\nimport { getLocale } from '../../../../../utils/localeUtils';\n\nconst SectionWhyLCHMakesAccessibilityEasier = () => (\n    <OmniListItem>\n        <strong>\n            {getLocale(\n                'stories.designers.workingWithColor.creatingColorVariants.sectionTitles.whyLCH.makesAccessibilityEasier',\n            )}\n        </strong>\n        <Paragraph>\n            One of the key benefits of LCH is that it simplifies accessibility\n            and contrast considerations.\n        </Paragraph>\n        <OmniList>\n            <OmniListItem>\n                <strong>Same Lightness = Same Contrast&#58;</strong> In LCH, two\n                colors with the same Lightness value will typically have the\n                same contrast ratio against elements on them, regardless of\n                their Hue.\n            </OmniListItem>\n            <OmniListItem>\n                This is not true in HSL, where two colors might have the same\n                Lightness but wildly different perceived contrasts.\n            </OmniListItem>\n        </OmniList>\n        <Paragraph>\n            With LCH, it&apos;s easier to generate accessible variants because\n            you can confidently adjust Lightness and know it will produce\n            predictable results.\n        </Paragraph>\n    </OmniListItem>\n);\n\nexport default SectionWhyLCHMakesAccessibilityEasier;\n","import {\n    Paragraph,\n    OmniList,\n    OmniListItem,\n} from '@driponfleek/bankai-ui-typography';\nimport { getLocale } from '../../../../../utils/localeUtils';\n\nconst SectionWhyLCHHandlesTrickyColorsBetter = () => (\n    <OmniListItem>\n        <strong>\n            {getLocale(\n                'stories.designers.workingWithColor.creatingColorVariants.sectionTitles.whyLCH.handlesTrickyColorsBetter',\n            )}\n        </strong>\n        <Paragraph>\n            Certain colors&mdash;like yellows and blue-grays&mdash;can be hard\n            to work with in other color spaces.\n        </Paragraph>\n        <OmniList>\n            <OmniListItem>\n                <strong>Yellows&#58;</strong> Darkening yellow in HSL often\n                shifts it toward green or brown. In LCH, the Chroma and Hue\n                adjustments keep it warm and golden.\n            </OmniListItem>\n            <OmniListItem>\n                <strong>Blue-Grays&#58;</strong> Darkening blue-gray in HSL can\n                oversaturate it into a vivid blue. In LCH, we carefully reduce\n                Chroma to maintain neutrality.\n            </OmniListItem>\n        </OmniList>\n        <Paragraph>\n            Whether you&apos;re working with light pastels or dark neutrals, LCH\n            generates colors that feel natural and stay true to their base tone.\n        </Paragraph>\n    </OmniListItem>\n);\n\nexport default SectionWhyLCHHandlesTrickyColorsBetter;\n","import { OmniList } from '@driponfleek/bankai-ui-typography';\nimport { StorySection, SectionTitle } from '@driponfleek/bankai-lib-storybook';\nimport SectionWhyLCHHowHumansSeeColor from './SectionWhyLCHHowHumansSeeColor';\nimport SectionWhyLCHMakesAccessibilityEasier from './SectionWhyLCHMakesAccessibilityEasier';\nimport SectionWhyLCHHandlesTrickyColorsBetter from './SectionWhyLCHHandlesTrickyColorsBetter';\nimport { getLocale } from '../../../../../utils/localeUtils';\n\nconst SectionWhyLCH = () => (\n    <StorySection>\n        <SectionTitle>\n            {getLocale(\n                'stories.designers.workingWithColor.creatingColorVariants.sectionTitles.whyLCH',\n            )}\n        </SectionTitle>\n        <OmniList isOrderedList>\n            <SectionWhyLCHHowHumansSeeColor />\n            <SectionWhyLCHMakesAccessibilityEasier />\n            <SectionWhyLCHHandlesTrickyColorsBetter />\n        </OmniList>\n    </StorySection>\n);\n\nexport default SectionWhyLCH;\n","import {\n    OmniList,\n    OmniListItem,\n    Paragraph,\n} from '@driponfleek/bankai-ui-typography';\nimport { StorySection, SectionTitle } from '@driponfleek/bankai-lib-storybook';\nimport { getLocale } from '../../../../../utils/localeUtils';\n\nconst SectionHowWeGenerateVariants = () => (\n    <StorySection>\n        <SectionTitle>\n            {getLocale(\n                'stories.designers.workingWithColor.creatingColorVariants.sectionTitles.howWeGenerateColorVariants',\n            )}\n        </SectionTitle>\n        <Paragraph>\n            Now that you understand why we use LCH, here&apos;s how we generate\n            variants&#58;\n        </Paragraph>\n        <OmniList>\n            <OmniListItem>\n                <strong>Start with Your Base Color&#58;</strong> This is the\n                color you choose as your starting point.\n            </OmniListItem>\n            <OmniListItem>\n                <strong>Adjust Lightness&#58;</strong> We create lighter and\n                darker variants by adjusting the Lightness value.\n            </OmniListItem>\n            <OmniListItem>\n                <strong>Refine Chroma &#40;a.k.a. Saturation&#41;&#58;</strong>{' '}\n                For lighter variants, we gently reduce Chroma to keep the color\n                vibrant but not overwhelming. For darker variants, we reduce\n                Chroma more aggressively to maintain neutral, usable tones.\n            </OmniListItem>\n            <OmniListItem>\n                <strong>Stabilize Hue&#58;</strong> For tricky colors like\n                yellows and blue-grays, we make minor Hue adjustments to prevent\n                unwanted shifts.\n            </OmniListItem>\n        </OmniList>\n    </StorySection>\n);\n\nexport default SectionHowWeGenerateVariants;\n","import { Paragraph } from '@driponfleek/bankai-ui-typography';\nimport { StorySection, SectionTitle } from '@driponfleek/bankai-lib-storybook';\nimport { getLocale } from '../../../../../utils/localeUtils';\n\nconst SectionFinalNoteToDesigners = () => (\n    <StorySection>\n        <SectionTitle>\n            {getLocale(\n                'stories.designers.workingWithColor.creatingColorVariants.sectionTitles.finalNoteToDesigners',\n            )}\n        </SectionTitle>\n        <Paragraph>\n            If you want a cooler or warmer tone, or a more muted or vibrant\n            color, simply choose a base color that reflects that intent. Our\n            system ensures the lighter and darker variants stay true to your\n            chosen color while making them accessible and easy to use.\n        </Paragraph>\n    </StorySection>\n);\n\nexport default SectionFinalNoteToDesigners;\n","// import { LinkButton } from '@driponfleek/bankai-ui-buttons';\nimport { OmniList, OmniListItem } from '@driponfleek/bankai-ui-typography';\nimport { StorySection, SectionTitle } from '@driponfleek/bankai-lib-storybook';\nimport { Hyperlink } from '@driponfleek/bankai-ui-navigation';\n// import { linkTo } from '@storybook/addon-links';\n\n// Utils\nimport { getLocale } from '../../../../../utils/localeUtils';\n\n// TODO: Add link to variant generator?\nconst SectionFurtherReading = () => {\n    return (\n        <StorySection>\n            <SectionTitle>{getLocale('titles.furtherReading')}</SectionTitle>\n            <StorySection>\n                <OmniList>\n                    {/* <OmniListItem>\n                        <LinkButton\n                            text={getLocale(\n                                'stories.foundation.iconography.guidelines.title',\n                            )}\n                            onClick={linkTo(\n                                `${getLocale('titles.foundation')}/${getLocale(\n                                    'titles.iconography',\n                                )}`,\n                                getLocale(\n                                    'stories.foundation.iconography.guidelines.title',\n                                ),\n                            )}\n                        />\n                    </OmniListItem> */}\n                    <OmniListItem>\n                        <Hyperlink\n                            href=\"https://atmos.style/blog/lch-color-space\"\n                            shouldOpenInNewWindow\n                        >\n                            LCH is the Best Color Space For UI\n                        </Hyperlink>\n                    </OmniListItem>\n                    <OmniListItem>\n                        <Hyperlink\n                            href=\"https://zapier.com/blog/lch-easier-accessibility-prettier-colors/\"\n                            shouldOpenInNewWindow\n                        >\n                            LCH&#58; Easier Accessibility and Prettier Colors\n                        </Hyperlink>\n                    </OmniListItem>\n                    <OmniListItem>\n                        <Hyperlink\n                            href=\"https://www.smashingmagazine.com/2021/11/guide-modern-css-colors/\"\n                            shouldOpenInNewWindow\n                        >\n                            A Guide To Modern CSS Colors With RGB, HSL, HWB, LAB\n                            And LCH\n                        </Hyperlink>\n                    </OmniListItem>\n                    <OmniListItem>\n                        <Hyperlink\n                            href=\"https://lea.verou.me/blog/2020/04/lch-colors-in-css-what-why-and-how/\"\n                            shouldOpenInNewWindow\n                        >\n                            LCH Colors in CSS: What, Why, and How?\n                        </Hyperlink>\n                    </OmniListItem>\n                </OmniList>\n            </StorySection>\n        </StorySection>\n    );\n};\n\nexport default SectionFurtherReading;\n","import { genSBBaseCls } from '@driponfleek/bankai-lib-storybook';\nimport { STORY_SUB_TITLE } from './const/storyConst';\nimport SectionIntro from './sections/creating-color-variants/SectionIntro';\nimport SectionWhyLCH from './sections/creating-color-variants/SectionWhyLCH';\nimport SectionHowWeGenerateVariants from './sections/creating-color-variants/SectionHowWeGenerateVariants';\nimport SectionFinalNoteToDesigners from './sections/creating-color-variants/SectionFinalNoteToDesigners';\nimport SectionFurtherReading from './sections/creating-color-variants/SectionFurtherReading';\nimport StoryLayout from '../../../sb-components/layout/StoryLayout';\nimport { getLocale } from '../../../utils/localeUtils';\n\n// Styles\nimport './styles/story-color-variants-gen.scss';\n\nconst StoryCreatingColorVariants = () => {\n    const baseCls = genSBBaseCls('creating-color-variants');\n\n    return (\n        <StoryLayout\n            contextCls={baseCls}\n            title={getLocale(\n                'stories.designers.workingWithColor.creatingColorVariants.title',\n            )}\n            subTitle={STORY_SUB_TITLE}\n        >\n            <SectionIntro />\n            <SectionWhyLCH />\n            <SectionHowWeGenerateVariants />\n            <SectionFinalNoteToDesigners />\n            <SectionFurtherReading />\n        </StoryLayout>\n    );\n};\n\nexport default StoryCreatingColorVariants;\n"],"names":["SectionIntro","jsx","StorySection","Paragraph","SectionWhyLCHHowHumansSeeColor","jsxs","OmniListItem","getLocale","OmniList","SectionWhyLCHMakesAccessibilityEasier","SectionWhyLCHHandlesTrickyColorsBetter","SectionWhyLCH","SectionTitle","SectionHowWeGenerateVariants","SectionFinalNoteToDesigners","SectionFurtherReading","Hyperlink","StoryCreatingColorVariants","baseCls","genSBBaseCls","StoryLayout","STORY_SUB_TITLE"],"mappings":"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"}