{"version":3,"file":"DoAndDoNotDo-4b508f65.js","sources":["../../../storybook-lib/src/components/callouts/BannerAffirmative.jsx","../../../storybook-lib/src/components/callouts/BannerDanger.jsx","../../../storybook-lib/src/components/callouts/DoAndDoNotDoList.jsx","../../../storybook-lib/src/components/callouts/DoAndDoNotDo.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { BannerAffirmative as BankaiBannerAffirm } from '@driponfleek/bankai-ui-callouts';\nimport { BankaiCircleCheck } from '@driponfleek/bankai-ui-icons';\n\n// Utils\nimport { genSBBaseCls } from '../../utils/storiesConfigUtils';\n\n// Styles\nimport './styles/banner.scss';\n\nconst BannerAffirmative = (props) => {\n    const { contextCls, ...rest } = props;\n    const baseCls = `${genSBBaseCls('banner')} ${genSBBaseCls(\n        'banner-affirmative',\n    )}`;\n\n    return (\n        <BankaiBannerAffirm\n            {...rest}\n            contextCls={cx(baseCls, contextCls)}\n            renderIcon={BankaiCircleCheck}\n        />\n    );\n};\n\nBannerAffirmative.propTypes = {\n    contextCls: PropTypes.string,\n};\n\nexport default BannerAffirmative;\n","import PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { BannerDanger as BankaiBannerDang } from '@driponfleek/bankai-ui-callouts';\nimport { BankaiTriangleAlert } from '@driponfleek/bankai-ui-icons';\n\n// Utils\nimport { genSBBaseCls } from '../../utils/storiesConfigUtils';\n\n// Styles\nimport './styles/banner.scss';\n\nconst BannerDanger = (props) => {\n    const { contextCls, renderIcon, ...rest } = props;\n    const baseCls = `${genSBBaseCls('banner')} ${genSBBaseCls(\n        'banner-danger',\n    )}`;\n\n    return (\n        <BankaiBannerDang\n            {...rest}\n            contextCls={cx(baseCls, contextCls)}\n            renderIcon={renderIcon ?? BankaiTriangleAlert}\n        />\n    );\n};\n\nBannerDanger.propTypes = {\n    contextCls: PropTypes.string,\n    renderIcon: PropTypes.func,\n};\n\nexport default BannerDanger;\n","import { Children } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { OmniList, OmniListItem } from '@driponfleek/bankai-ui-typography';\nimport { BankaiCircleX } from '@driponfleek/bankai-ui-icons';\nimport BannerAffirmative from './BannerAffirmative';\nimport BannerDanger from './BannerDanger';\n\n// Utils\nimport { genSBBaseCls } from '../../utils/storiesConfigUtils';\n\n// Styles\nimport './styles/do-and-do-not-do-list.scss';\n\nconst DoAndDoNotDoList = (props) => {\n    const { contextCls, isAffirmative, title, list } = props;\n    const baseCls = genSBBaseCls('do-and-do-not-do__list');\n    // const Icon = isAffirmative ? BankaiCircleCheck : BankaiCircleX;\n    const Banner = isAffirmative ? BannerAffirmative : BannerDanger;\n    const hasListItems = list.length > 0;\n    // TODO: This is so bad, functional components suck. Need to find a way to do this without\n    // violating every best practice in programming.\n    const bannerProps = {\n        ...(title && { title }),\n        ...(hasListItems && {\n            msg: (\n                <OmniList>\n                    {Children.toArray(\n                        list.map((item) => <OmniListItem>{item}</OmniListItem>),\n                    )}\n                </OmniList>\n            ),\n        }),\n        ...(!isAffirmative && { renderIcon: BankaiCircleX }),\n    };\n\n    return <Banner contextCls={cx(baseCls, contextCls)} {...bannerProps} />;\n};\n\nDoAndDoNotDoList.defaultProps = {\n    list: [],\n};\n\nDoAndDoNotDoList.propTypes = {\n    contextCls: PropTypes.string,\n    title: PropTypes.string,\n    isAffirmative: PropTypes.bool,\n    list: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    ),\n};\n\nexport default DoAndDoNotDoList;\n","import PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport DoAndDoNotDoList from './DoAndDoNotDoList';\n\n// Utils\nimport { genSBBaseCls } from '../../utils/storiesConfigUtils';\n\n// Styles\nimport './styles/do-and-do-not-do.scss';\n\nconst DoAndDoNotDo = (props) => {\n    const {\n        contextCls,\n        doNotDoTitle,\n        doTitle,\n        isSideBySide,\n        doList,\n        doNotDoList,\n    } = props;\n    const baseCls = genSBBaseCls('do-and-do-not-do');\n    const hasDoList = doList.length > 0;\n    const hasDoNotDoList = doNotDoList.length > 0;\n    const modCls = {\n        [`${baseCls}--side-by-side`]: isSideBySide,\n    };\n\n    return (\n        <div className={cx(baseCls, modCls, contextCls)}>\n            <div className={`${baseCls}__inner`}>\n                {hasDoList && (\n                    <div className={`${baseCls}__list-container`}>\n                        <DoAndDoNotDoList\n                            title={doTitle}\n                            list={doList}\n                            isAffirmative\n                        />\n                    </div>\n                )}\n                {hasDoNotDoList && (\n                    <div className={`${baseCls}__list-container`}>\n                        <DoAndDoNotDoList\n                            title={doNotDoTitle}\n                            list={doNotDoList}\n                        />\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nDoAndDoNotDo.defaultProps = {\n    isSideBySide: false,\n    doList: [],\n    doNotDoList: [],\n};\n\nDoAndDoNotDo.propTypes = {\n    contextCls: PropTypes.string,\n    doNotDoTitle: PropTypes.string,\n    doTitle: PropTypes.string,\n    isSideBySide: PropTypes.bool,\n    doList: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    ),\n    doNotDoList: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    ),\n};\n\nexport default DoAndDoNotDo;\n"],"names":["BannerAffirmative","props","contextCls","rest","baseCls","genSBBaseCls","jsx","BankaiBannerAffirm","cx","BankaiCircleCheck","PropTypes","BannerAffirmative$1","BannerDanger","renderIcon","BankaiBannerDang","BankaiTriangleAlert","BannerDanger$1","DoAndDoNotDoList","isAffirmative","title","list","Banner","hasListItems","bannerProps","OmniList","Children","item","OmniListItem","BankaiCircleX","DoAndDoNotDoList$1","DoAndDoNotDo","doNotDoTitle","doTitle","isSideBySide","doList","doNotDoList","hasDoList","hasDoNotDoList","modCls","jsxs","BestPractices"],"mappings":"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"}