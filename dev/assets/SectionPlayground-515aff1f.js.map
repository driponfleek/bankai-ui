{"version":3,"file":"SectionPlayground-515aff1f.js","sources":["../../../components/form-elements/src/UniversalToggleInput.jsx","../../../components/form-elements/src/ToggleInputCheckboxIcon.jsx","../../../components/form-elements/src/Checkbox.jsx","../../../components/form-elements/src/ToggleInputRadioIcon.jsx","../../../components/form-elements/src/Radio.jsx","../../stories/components/form-elements/sections/toggle-input/SectionImplementation.jsx","../../stories/components/form-elements/sections/toggle-input/SectionPlayground.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport cx from 'classnames';\n\n// Utils\nimport { getToggleInputExtantProps } from './utils/inputUtils';\n\n// Styles\nimport './styles/universal-toggle-input.scss';\n\nconst UniversalToggleInput = (props) => {\n    const {\n        contextCls,\n        value,\n        isChecked,\n        isDisabled,\n        data,\n        onChange,\n        renderCheckedIcon,\n    } = props;\n    const inputProps = getToggleInputExtantProps(props);\n    const baseCls = 'bankai-universal-toggle-input';\n    const handleChange = (evt) => {\n        onChange({ value, isChecked, data, evt });\n    };\n    const modCls = {\n        [`${baseCls}--checked`]: isChecked,\n        [`${baseCls}--disabled`]: isDisabled,\n    };\n\n    return (\n        <span className={cx(baseCls, modCls, contextCls)}>\n            <input\n                {...inputProps}\n                className={`${baseCls}__input`}\n                onChange={handleChange}\n            />\n            <span className={`${baseCls}__container`}>\n                {isChecked && renderCheckedIcon({ baseCls })}\n            </span>\n        </span>\n    );\n};\n\nUniversalToggleInput.defaultProps = {\n    isDisabled: false,\n    isChecked: false,\n    onChange: () => Promise.resolve(),\n    renderCheckedIcon: () => <span />,\n};\n\nUniversalToggleInput.propTypes = {\n    contextCls: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    isChecked: PropTypes.bool,\n    isDisabled: PropTypes.bool,\n    data: PropTypes.object,\n    onChange: PropTypes.func,\n    renderCheckedIcon: PropTypes.func,\n};\n\nexport default UniversalToggleInput;\n","import PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { BankaiCheck } from '@driponfleek/bankai-ui-icons';\n\nconst ToggleInputCheckboxIcon = (props) => {\n    const { baseCls, contextCls } = props;\n    const iconBaseCls = `${baseCls}__icon`;\n\n    return <BankaiCheck className={cx(iconBaseCls, contextCls)} />;\n};\n\nToggleInputCheckboxIcon.propTypes = {\n    baseCls: PropTypes.string,\n    contextCls: PropTypes.string,\n};\n\nexport default ToggleInputCheckboxIcon;\n","import PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport UniversalToggleInput from './UniversalToggleInput';\nimport ToggleInputCheckboxIcon from './ToggleInputCheckboxIcon';\n\n// Styles\nimport './styles/checkbox.scss';\n\nconst Checkbox = (props) => {\n    const { contextCls } = props;\n    const baseCls = 'bankai-checkbox';\n\n    return (\n        <UniversalToggleInput\n            {...props}\n            contextCls={cx(baseCls, contextCls)}\n            type=\"checkbox\"\n        />\n    );\n};\n\nCheckbox.defaultProps = {\n    isDisabled: false,\n    isChecked: false,\n    onChange: () => Promise.resolve(),\n    renderCheckedIcon: ToggleInputCheckboxIcon,\n};\n\nCheckbox.propTypes = {\n    baseCls: PropTypes.string,\n    contextCls: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    isChecked: PropTypes.bool,\n    isDisabled: PropTypes.bool,\n    data: PropTypes.object,\n    onChange: PropTypes.func,\n    renderCheckedIcon: PropTypes.func,\n};\n\nexport default Checkbox;\n","import PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nconst ToggleInputRadioIcon = (props) => {\n    const { baseCls, contextCls } = props;\n    const iconBaseCls = `${baseCls}__icon`;\n\n    return <span className={cx(iconBaseCls, contextCls)} />;\n};\n\nToggleInputRadioIcon.propTypes = {\n    baseCls: PropTypes.string,\n    contextCls: PropTypes.string,\n};\n\nexport default ToggleInputRadioIcon;\n","import PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport UniversalToggleInput from './UniversalToggleInput';\nimport ToggleInputRadioIcon from './ToggleInputRadioIcon';\n\n// Styles\nimport './styles/radio.scss';\n\nconst Radio = (props) => {\n    const { contextCls } = props;\n    const baseCls = 'bankai-radio';\n\n    return (\n        <UniversalToggleInput\n            {...props}\n            contextCls={cx(baseCls, contextCls)}\n            type=\"radio\"\n        />\n    );\n};\n\nRadio.defaultProps = {\n    isDisabled: false,\n    isChecked: false,\n    onChange: () => Promise.resolve(),\n    renderCheckedIcon: ToggleInputRadioIcon,\n};\n\nRadio.propTypes = {\n    baseCls: PropTypes.string,\n    contextCls: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    isChecked: PropTypes.bool,\n    isDisabled: PropTypes.bool,\n    data: PropTypes.object,\n    onChange: PropTypes.func,\n    renderCheckedIcon: PropTypes.func,\n};\n\nexport default Radio;\n","import PropTypes from 'prop-types';\nimport { StorySection, SectionTitle } from '@driponfleek/bankai-lib-storybook';\nimport CompImportAndUsage from '../../../../../sb-components/docblocks/CompImportAndUsage';\n\n// Utils\nimport { getLocale } from '../../../../../utils/localeUtils';\n\nconst SectionImplementation = (props) => {\n    const { isRadio } = props;\n    const compName = isRadio ? 'Radio' : 'Checkbox';\n    const importCodeStr = `import { ${compName} } from '@driponfleek/bankai-ui-form-elements';`;\n    const usageCodeStr = `<${compName} />`;\n\n    return (\n        <StorySection>\n            <SectionTitle>{getLocale('titles.implementation')}</SectionTitle>\n            <StorySection>\n                <CompImportAndUsage\n                    importCodeStr={importCodeStr}\n                    usageCodeStr={usageCodeStr}\n                />\n            </StorySection>\n        </StorySection>\n    );\n};\n\nSectionImplementation.defaultProps = {\n    isRadio: false,\n};\n\nSectionImplementation.propTypes = {\n    isRadio: PropTypes.bool,\n};\n\nexport default SectionImplementation;\n","import PropTypes from 'prop-types';\nimport { Checkbox, Radio } from '@driponfleek/bankai-ui-form-elements';\nimport {\n    StorySection,\n    ComponentPreview,\n} from '@driponfleek/bankai-lib-storybook';\n\nconst SectionPlayground = (props) => {\n    const { isRadio, ...rest } = props;\n    const Comp = isRadio ? Radio : Checkbox;\n\n    return (\n        <StorySection>\n            <ComponentPreview shouldCheckA11Y>\n                <Comp {...rest} />\n            </ComponentPreview>\n        </StorySection>\n    );\n};\n\nSectionPlayground.defaultProps = {\n    isRadio: false,\n};\n\nSectionPlayground.propTypes = {\n    isRadio: PropTypes.bool,\n};\n\nexport default SectionPlayground;\n"],"names":["UniversalToggleInput","props","contextCls","value","isChecked","isDisabled","data","onChange","renderCheckedIcon","inputProps","getToggleInputExtantProps","baseCls","handleChange","evt","modCls","cx","jsx","PropTypes","UniversalToggleInput$1","ToggleInputCheckboxIcon","iconBaseCls","BankaiCheck","ToggleInputCheckboxIcon$1","Checkbox","BankaiCheckbox","ToggleInputRadioIcon","ToggleInputRadioIcon$1","Radio","Radio$1","SectionImplementation","isRadio","compName","importCodeStr","usageCodeStr","StorySection","SectionTitle","getLocale","CompImportAndUsage","SectionPlayground","rest","ComponentPreview"],"mappings":"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"}