import{j as o}from"./jsx-runtime-DN5Rltsz.js";import{S as c,P as d}from"./storyConst-CXbqu0dN.js";import{C as F}from"./CompImportAndUsage-8urofnI3.js";import{S as t,g as i}from"./localeUtils--UUmbdnw.js";import{S as f}from"./SectionTitle-39xke60s.js";import{C}from"./ComponentPreview-CkYV88iX.js";import{F as m}from"./FormFieldComposer-D-B-yX1V.js";import{T as S}from"./TextInput-BZggGfZn.js";import{S as u}from"./StoryLayout-BFb23cXo.js";import{g as x}from"./iframe-X-brMXKZ.js";import{a as g,b as T}from"./sharedFFCArgs-5qqh9Y61.js";import{h as s}from"./FFCHints-D9rJaj1H.js";import{c as h}from"./argTypesUtils-By8Yfhfe.js";import"./storiesConfigUtils-yQeCesyz.js";import"./blocks-W-vzZJEX.js";import"./preload-helper-D9Z9MdNV.js";import"./index-B-uh1bSy.js";import"./CodeBlock-BzYvCjpA.js";import"./clipboardUtils-DU0Y7-h4.js";import"./extends-V8a3TPL4.js";import"./Button-B6xhAhFj.js";import"./BankaiSpinner-CFdc15Ly.js";import"./shared-gfGC2uQP.js";import"./Paragraph-wnBSR9tR.js";import"./v4-CtRu48qb.js";import"./inputUtils-B53uMYwj.js";import"./sharedArgs-xfTyUM37.js";const I="import { FormFieldComposer, TextInput } from '@driponfleek/bankai-ui-form-elements';",_=`const TextField = FormFieldComposer(TextInput);

<TextField labelProps={{ content: 'User Name' }} />`,n=()=>o.jsxs(t,{children:[o.jsx(f,{children:i("titles.implementation")}),o.jsx(t,{children:o.jsx(F,{importCodeStr:I,usageCodeStr:_})})]});n.__docgenInfo={description:"",methods:[],displayName:"SectionImplementation"};const y=m(S),p=e=>o.jsx(t,{children:o.jsx(C,{shouldCheckA11Y:!0,children:o.jsx(y,{...e})})});p.__docgenInfo={description:"",methods:[],displayName:"SectionPlayground"};const a=e=>{const l=x("form-field-composer");return o.jsxs(u,{contextCls:l,pkgVer:d.version,title:i("stories.components.formElements.formFieldComposer.title"),subTitle:c,children:[o.jsx(p,{...e}),o.jsx(n,{})]})};a.__docgenInfo={description:"",methods:[],displayName:"StoryFormFieldComposer"};const{STACKED:j}=s,N={...g,variant:j},b={...T,...h({description:"Use to control the layout of the form element, label and hints. `INLINE_RIGHT` is used for controls like Radios, Checkboxes, Toggle Switches, etc.",options:Object.keys(s).map(e=>s[e]),propName:"variant"})},eo={title:"Components/Form Elements",component:m,argTypes:b,args:N},r={name:"Form Field Composer",render:a,component:m};r.parameters={...r.parameters,docs:{...r.parameters?.docs,source:{originalSource:`{
  name: 'Form Field Composer',
  render: StoryFormFieldComposer,
  component: BankaiFormFieldComposer
}`,...r.parameters?.docs?.source}}};const ro=["FormFieldComposer"];export{r as FormFieldComposer,ro as __namedExportsOrder,eo as default};
