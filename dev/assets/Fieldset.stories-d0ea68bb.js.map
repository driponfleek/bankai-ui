{"version":3,"file":"Fieldset.stories-d0ea68bb.js","sources":["../../stories/components/form-elements/sections/fieldset/SectionImplementation.jsx","../../stories/components/form-elements/sections/fieldset/SectionPlayground.jsx","../../stories/components/form-elements/StoryFieldset.jsx","../../stories/components/form-elements/args/fieldsetArgs.js"],"sourcesContent":["import { StorySection, SectionTitle } from '@driponfleek/bankai-lib-storybook';\nimport CompImportAndUsage from '../../../../../sb-components/docblocks/CompImportAndUsage';\n\n// Utils\nimport { getLocale } from '../../../../../utils/localeUtils';\n\nconst importCodeStr = `import { Fieldset } from '@driponfleek/bankai-ui-form-elements';`;\nconst usageCodeStr = `<Fieldset legend=\"User Information\">\n    {/* ... */}\n</Fieldset>`;\n\nconst SectionImplementation = () => {\n    return (\n        <StorySection>\n            <SectionTitle>{getLocale('titles.implementation')}</SectionTitle>\n            <StorySection>\n                <CompImportAndUsage\n                    importCodeStr={importCodeStr}\n                    usageCodeStr={usageCodeStr}\n                />\n            </StorySection>\n        </StorySection>\n    );\n};\n\nexport default SectionImplementation;\n","import {\n    Fieldset,\n    IFLFormFieldComposer,\n    TextInput,\n    Textarea,\n} from '@driponfleek/bankai-ui-form-elements';\nimport {\n    FormLayout,\n    FormLayoutSection,\n    DynamicFormRow,\n} from '@driponfleek/bankai-ui-layouts';\nimport {\n    StorySection,\n    ComponentPreview,\n} from '@driponfleek/bankai-lib-storybook';\n\nconst TextInputField = IFLFormFieldComposer(TextInput);\nconst TextareaField = IFLFormFieldComposer(Textarea);\n\nconst SectionPlayground = (props) => {\n    return (\n        <StorySection>\n            <ComponentPreview shouldCheckA11Y>\n                <Fieldset {...props}>\n                    <FormLayout>\n                        <FormLayoutSection>\n                            <DynamicFormRow>\n                                <TextInputField\n                                    labelProps={{ content: 'First Name' }}\n                                />\n                            </DynamicFormRow>\n                            <DynamicFormRow>\n                                <TextInputField\n                                    labelProps={{ content: 'Last Name' }}\n                                />\n                            </DynamicFormRow>\n                            <DynamicFormRow>\n                                <TextareaField\n                                    labelProps={{ content: 'Address' }}\n                                />\n                            </DynamicFormRow>\n                        </FormLayoutSection>\n                    </FormLayout>\n                </Fieldset>\n            </ComponentPreview>\n        </StorySection>\n    );\n};\n\nexport default SectionPlayground;\n","import { genSBBaseCls } from '@driponfleek/bankai-lib-storybook';\nimport { STORY_SUB_TITLE, PKG_JSON } from './const/storyConst';\nimport SectionImplementation from './sections/fieldset/SectionImplementation';\nimport SectionPlayground from './sections/fieldset/SectionPlayground';\nimport StoryLayout from '../../../sb-components/layout/StoryLayout';\n\n// Utils\nimport { getLocale } from '../../../utils/localeUtils';\n\nconst StoryFieldset = (props) => {\n    const baseCls = genSBBaseCls('fieldset');\n\n    return (\n        <StoryLayout\n            contextCls={baseCls}\n            pkgVer={PKG_JSON.version}\n            title={getLocale('stories.components.formElements.fieldset.title')}\n            subTitle={STORY_SUB_TITLE}\n        >\n            <SectionPlayground {...props} />\n            <SectionImplementation />\n        </StoryLayout>\n    );\n};\n\nexport default StoryFieldset;\n","import {\n    stringArg,\n    boolArg,\n    objectArg,\n} from '@driponfleek/bankai-lib-storybook';\nimport {\n    contextClsArgType,\n    isDisabledArgType,\n} from '../../../../args/sharedArgs';\n\nexport const args = {\n    isDisabled: false,\n    shouldIndentContent: false,\n    legend: 'User Information',\n};\n\nexport const argTypes = {\n    ...contextClsArgType,\n    ...stringArg({\n        // description: '',\n        propName: 'formId',\n    }),\n    ...stringArg({\n        // description: '',\n        propName: 'name',\n    }),\n    ...isDisabledArgType,\n    ...boolArg({\n        // description: '',\n        propName: 'shouldIndentContent',\n    }),\n    ...objectArg({\n        // description: '',\n        propName: 'legendProps',\n    }),\n};\n"],"names":["importCodeStr","usageCodeStr","SectionImplementation","StorySection","jsx","SectionTitle","getLocale","CompImportAndUsage","TextInputField","IFLFormFieldComposer","TextInput","TextareaField","Textarea","SectionPlayground","props","ComponentPreview","Fieldset","FormLayout","FormLayoutSection","DynamicFormRow","StoryFieldset","baseCls","genSBBaseCls","jsxs","StoryLayout","PKG_JSON","STORY_SUB_TITLE","args","argTypes","contextClsArgType","stringArg","isDisabledArgType","boolArg","objectArg"],"mappings":"20CAMA,MAAAA,EAAA,mEACAC,EAAA;AAAA;AAAA,aAIAC,EAAA,MAEAC,EACA,CAAA,SAAA,CAAAC,EAAAC,EAAA,CAAA,SAAAC,EAAA,uBAAA,CAAA,CAAA,IACAH,EACA,CAAA,SAAAC,EAAAG,EAAA,CACA,cAAAP,EACA,aAAAC,CAAA,CAAA,EAEA,CACA,CAAA,CAAA,iFCLA,MAAAO,EAAAC,EAAAC,CAAA,EACAC,EAAAF,EAAAG,CAAA,EAEAC,EAAAC,GAEAV,EAAAD,EAAA,CACA,SAAAC,EAAAW,EAAA,CAAA,gBAAA,GACA,SAAAX,EAAAY,EAAA,CAAA,GAAAF,EACA,SAAAV,EAAAa,EAAA,CACA,WAAAC,EACA,CAAA,SAAA,CAAAd,EAAAe,EACA,CAAA,SAAAf,EAAAI,EAAA,CACA,WAAA,CAAA,QAAA,YAAA,CAAA,CAAA,EAEA,IACAW,EACA,CAAA,SAAAf,EAAAI,EAAA,CACA,WAAA,CAAA,QAAA,WAAA,CAAA,CAAA,EAEA,IACAW,EACA,CAAA,SAAAf,EAAAO,EAAA,CACA,WAAA,CAAA,QAAA,SAAA,CAAA,CAAA,EAEA,CACA,CAAA,CAAA,CAAA,CACA,CACA,CAAA,CACA,CAAA,CACA,CAAA,6ECpCA,MAAAS,EAAAN,GAAA,CACA,MAAAO,EAAAC,EAAA,UAAA,EAGA,OAAAC,EAAAC,EAAA,CACA,WAAAH,EACA,OAAAI,EAAA,QACA,MAAAnB,EAAA,gDAAA,EACA,SAAAoB,EAEA,SAAA,CAAAtB,EAAAS,EAAA,CAAA,GAAAC,EAAA,IACAZ,EAAA,EAAA,CAAA,CAAA,CAAA,CAGA,yECbO,MAAMyB,EAAO,CAChB,WAAY,GACZ,oBAAqB,GACrB,OAAQ,kBACZ,EAEaC,EAAW,CACpB,GAAGC,EACH,GAAGC,EAAU,CAET,SAAU,QAClB,CAAK,EACD,GAAGA,EAAU,CAET,SAAU,MAClB,CAAK,EACD,GAAGC,EACH,GAAGC,EAAQ,CAEP,SAAU,qBAClB,CAAK,EACD,GAAGC,EAAU,CAET,SAAU,aAClB,CAAK,CACL;;;;"}