{"version":3,"file":"FormLayout.stories-aa944b96.js","sources":["../../../components/layouts/src/RetainLayoutComposer.jsx","../../../components/layouts/src/FormLayoutActionsContainer.jsx","../../../components/layouts/src/DynamicFormSection.jsx","../../../components/layouts/src/DynamicFormLayout.jsx","../../stories/components/layouts/sections/form-layout/SectionPlayground.jsx","../../stories/components/layouts/StoryFormLayout.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst withPassthrough = (Comp) => {\n    const Wrapped = (props) => {\n        const { shouldRetainLayout, ...rest } = props;\n\n        return <Comp {...rest} />;\n    };\n\n    Wrapped.defaultProps = {\n        shouldRetainLayout: true,\n    };\n\n    Wrapped.propTypes = {\n        shouldRetainLayout: PropTypes.bool,\n    };\n\n    return Wrapped;\n};\n\nconst RetainLayoutComposer = withPassthrough;\n\nexport default RetainLayoutComposer;\n","import PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nconst FormLayoutActionsContainer = (props) => {\n    const { contextCls, children } = props;\n    const baseCls = 'bankai-form-layout-actions-container';\n\n    return <div className={cx(baseCls, contextCls)}>{children}</div>;\n};\n\nFormLayoutActionsContainer.propTypes = {\n    contextCls: PropTypes.string,\n};\n\nexport default FormLayoutActionsContainer;\n","import { Children } from 'react';\nimport FormLayoutSection from './FormLayoutSection';\nimport DynamicFormRow from './DynamicFormRow';\n\nconst DynamicFormSection = (props) => {\n    const { children } = props;\n    const mainContent = Children.toArray(children).map((content) => {\n        if (content.props.shouldRetainLayout) {\n            return content;\n        }\n\n        return <DynamicFormRow key={content?.key}>{content}</DynamicFormRow>;\n    });\n\n    return <FormLayoutSection {...props}>{mainContent}</FormLayoutSection>;\n};\n\nexport default DynamicFormSection;\n","import { Children } from 'react';\nimport PropTypes from 'prop-types';\nimport FormLayout from './FormLayout';\nimport FormLayoutActionsContainer from './FormLayoutActionsContainer';\nimport DynamicFormSection from './DynamicFormSection';\n\nconst DynamicFormLayout = (props) => {\n    const { renderActions, contextCls, children } = props;\n    const mainContent = Children.toArray(children).map((content) => {\n        if (content.props.shouldRetainLayout) {\n            return content;\n        }\n\n        return (\n            <DynamicFormSection key={content?.key}>\n                {content}\n            </DynamicFormSection>\n        );\n    });\n\n    return (\n        <FormLayout contextCls={contextCls}>\n            {mainContent}\n            {renderActions && (\n                <FormLayoutActionsContainer>\n                    {renderActions()}\n                </FormLayoutActionsContainer>\n            )}\n        </FormLayout>\n    );\n};\n\nDynamicFormLayout.propTypes = {\n    contextCls: PropTypes.string,\n    renderActions: PropTypes.func,\n};\n\nexport default DynamicFormLayout;\n","import PropTypes from 'prop-types';\nimport { ButtonPrimary } from '@driponfleek/bankai-ui-buttons';\nimport {\n    Fieldset,\n    IFLFormFieldComposer,\n    TextInput,\n    Textarea,\n} from '@driponfleek/bankai-ui-form-elements';\nimport { DatePicker } from '@driponfleek/bankai-ui-form-elements-rw';\nimport {\n    DynamicFormLayout,\n    DynamicFormSection,\n    DynamicFormRow,\n    RetainLayoutComposer,\n} from '@driponfleek/bankai-ui-layouts';\nimport {\n    StorySection,\n    ComponentPreview,\n} from '@driponfleek/bankai-lib-storybook';\n\nconst TextInputField = IFLFormFieldComposer(TextInput);\nconst TextareaField = IFLFormFieldComposer(Textarea);\nconst DatePickerField = IFLFormFieldComposer(DatePicker);\nconst FormSectionWithPassthrough = RetainLayoutComposer(DynamicFormSection);\nconst FieldsetWithPassthrough = RetainLayoutComposer(Fieldset);\n\nconst SectionPlayground = (props) => {\n    const { baseCls, ...rest } = props;\n    const renderFormActions = () => {\n        return <ButtonPrimary text=\"Save User Info\" />;\n    };\n\n    return (\n        <StorySection>\n            <ComponentPreview shouldCheckA11Y>\n                <DynamicFormLayout {...rest} renderActions={renderFormActions}>\n                    <FormSectionWithPassthrough>\n                        <FieldsetWithPassthrough legend=\"User Info\">\n                            <DynamicFormRow contextCls={`${baseCls}`}>\n                                <TextInputField\n                                    labelProps={{ content: 'First Name' }}\n                                />\n                                <TextInputField\n                                    labelProps={{ content: 'Last Name' }}\n                                />\n                            </DynamicFormRow>\n                        </FieldsetWithPassthrough>\n                    </FormSectionWithPassthrough>\n                    <FormSectionWithPassthrough>\n                        <FieldsetWithPassthrough legend=\"About You\">\n                            <DynamicFormRow>\n                                <TextareaField\n                                    labelProps={{ content: 'Bio' }}\n                                    hintProps={{\n                                        children: '300 characters remaining',\n                                    }}\n                                />\n                            </DynamicFormRow>\n                            <DynamicFormRow>\n                                <DatePickerField\n                                    labelProps={{ content: 'Birthday' }}\n                                />\n                            </DynamicFormRow>\n                        </FieldsetWithPassthrough>\n                    </FormSectionWithPassthrough>\n                </DynamicFormLayout>\n            </ComponentPreview>\n        </StorySection>\n    );\n};\n\nSectionPlayground.propTypes = {\n    baseCls: PropTypes.string,\n};\n\nexport default SectionPlayground;\n","import { genSBBaseCls } from '@driponfleek/bankai-lib-storybook';\nimport { STORY_SUB_TITLE, PKG_JSON } from './const/storyConst';\nimport SectionPlayground from './sections/form-layout/SectionPlayground';\nimport StoryLayout from '../../../sb-components/layout/StoryLayout';\n\n// Utils\nimport { getLocale } from '../../../utils/localeUtils';\n\n// Styles\nimport './styles/story-form-layout.scss';\n\nconst StoryFormLayout = (props) => {\n    const baseCls = genSBBaseCls('form-layout');\n\n    return (\n        <StoryLayout\n            contextCls={baseCls}\n            pkgVer={PKG_JSON.version}\n            title={getLocale('stories.components.layouts.formLayout.title')}\n            subTitle={STORY_SUB_TITLE}\n        >\n            <SectionPlayground {...props} />\n        </StoryLayout>\n    );\n};\n\nexport default StoryFormLayout;\n"],"names":["withPassthrough","Comp","Wrapped","props","shouldRetainLayout","rest","jsx","PropTypes","RetainLayoutComposer","RetainLayoutComposer$1","FormLayoutActionsContainer","contextCls","children","cx","FormLayoutActionsContainer$1","DynamicFormSection","mainContent","Children","content","DynamicFormRow","FormLayoutSection","DynamicFormSection$1","DynamicFormLayout","renderActions","jsxs","FormLayout","DynamicFormLayout$1","TextInputField","IFLFormFieldComposer","TextInput","TextareaField","Textarea","DatePickerField","DatePicker","FormSectionWithPassthrough","FieldsetWithPassthrough","Fieldset","SectionPlayground","baseCls","StorySection","ComponentPreview","ButtonPrimary","StoryFormLayout","genSBBaseCls","StoryLayout","PKG_JSON","getLocale","STORY_SUB_TITLE"],"mappings":"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"}