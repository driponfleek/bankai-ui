{"version":3,"file":"Dropdown-eefc798a.js","sources":["../../../../node_modules/@restart/hooks/esm/useTimeout.js","../../../../node_modules/react-widgets/esm/DropdownListInput.js","../../../../node_modules/react-widgets/esm/DropdownList.js","../../../components/form-elements-rw/src/Dropdown.jsx"],"sourcesContent":["import { useMemo, useRef } from 'react';\nimport useMounted from './useMounted';\nimport useWillUnmount from './useWillUnmount';\n\n/*\n * Browsers including Internet Explorer, Chrome, Safari, and Firefox store the\n * delay as a 32-bit signed integer internally. This causes an integer overflow\n * when using delays larger than 2,147,483,647 ms (about 24.8 days),\n * resulting in the timeout being executed immediately.\n *\n * via: https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout\n */\nconst MAX_DELAY_MS = 2 ** 31 - 1;\nfunction setChainedTimeout(handleRef, fn, timeoutAtMs) {\n  const delayMs = timeoutAtMs - Date.now();\n  handleRef.current = delayMs <= MAX_DELAY_MS ? setTimeout(fn, delayMs) : setTimeout(() => setChainedTimeout(handleRef, fn, timeoutAtMs), MAX_DELAY_MS);\n}\n\n/**\n * Returns a controller object for setting a timeout that is properly cleaned up\n * once the component unmounts. New timeouts cancel and replace existing ones.\n *\n *\n *\n * ```tsx\n * const { set, clear } = useTimeout();\n * const [hello, showHello] = useState(false);\n * //Display hello after 5 seconds\n * set(() => showHello(true), 5000);\n * return (\n *   <div className=\"App\">\n *     {hello ? <h3>Hello</h3> : null}\n *   </div>\n * );\n * ```\n */\nexport default function useTimeout() {\n  const isMounted = useMounted();\n\n  // types are confused between node and web here IDK\n  const handleRef = useRef();\n  useWillUnmount(() => clearTimeout(handleRef.current));\n  return useMemo(() => {\n    const clear = () => clearTimeout(handleRef.current);\n    function set(fn, delayMs = 0) {\n      if (!isMounted()) return;\n      clear();\n      if (delayMs <= MAX_DELAY_MS) {\n        // For simplicity, if the timeout is short, just set a normal timeout.\n        handleRef.current = setTimeout(fn, delayMs);\n      } else {\n        setChainedTimeout(handleRef, fn, Date.now() + delayMs);\n      }\n    }\n    return {\n      set,\n      clear\n    };\n  }, []);\n}","import cn from 'classnames';\nimport React, { useImperativeHandle, useRef, useState } from 'react';\nconst DropdownListInput = /*#__PURE__*/React.forwardRef(function ({\n  name,\n  autoComplete,\n  value,\n  allowSearch,\n  placeholder,\n  textAccessor,\n  dataKeyAccessor,\n  searchTerm,\n  onSearch,\n  onAutofill,\n  onAutofillChange,\n  renderValue,\n  disabled,\n  readOnly\n}, ref) {\n  const [autofilling, setAutofilling] = useState(false);\n  const searchRef = useRef(null);\n\n  const handleAutofillDetect = ({\n    animationName\n  }) => {\n    let autofilling;\n    if (animationName === 'react-widgets-autofill-start') autofilling = true;else if (animationName === 'react-widgets-autofill-cancel') autofilling = false;else return;\n    setAutofilling(autofilling);\n    onAutofill(autofilling);\n  };\n\n  const handleAutofill = e => {\n    setAutofilling(false);\n    onAutofillChange(e);\n  };\n\n  let dataKey = dataKeyAccessor(value);\n  let text = value == null ? '' : textAccessor(value);\n  let strValue = String(dataKey != null ? dataKey : '');\n  if (strValue === String({})) strValue = '';\n  const inputValue = !value && placeholder ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"rw-placeholder\"\n  }, placeholder) : renderValue ? renderValue({\n    item: value,\n    dataKey,\n    text\n  }) : text;\n  useImperativeHandle(ref, () => ({\n    focus() {\n      if (searchRef.current) searchRef.current.focus();\n    }\n\n  })); // There is some interaction between unmounting the search and value inputs\n  // that cancels autofilling in Chrome, it may be due to an input the browser\n  // was considering suddenly disappeared. hiding it seems to avoid the issue\n\n  const style = autofilling ? {\n    display: 'none'\n  } : undefined;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rw-dropdown-list-input\"\n  }, autoComplete !== 'off' && /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    tabIndex: -1,\n    disabled: disabled,\n    readOnly: readOnly,\n    value: strValue == null ? '' : strValue,\n    autoComplete: autoComplete,\n    onChange: handleAutofill,\n    onAnimationStart: handleAutofillDetect,\n    \"aria-hidden\": !autofilling,\n    className: cn('rw-detect-autofill', !autofilling && 'rw-sr')\n  }), /*#__PURE__*/React.createElement(React.Fragment, null, allowSearch && /*#__PURE__*/React.createElement(\"input\", {\n    ref: searchRef,\n    disabled: disabled,\n    readOnly: readOnly,\n    style: style,\n    className: \"rw-dropdownlist-search\",\n    autoComplete: \"off\",\n    value: searchTerm || '',\n    size: (searchTerm || '').length + 2,\n    onChange: onSearch\n  }), !searchTerm && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"rw-dropdown-list-value\",\n    style: style\n  }, inputValue)));\n});\nDropdownListInput.displayName = 'DropdownListInput';\nexport default DropdownListInput;","const _excluded = [\"id\", \"autoFocus\", \"textField\", \"dataKey\", \"value\", \"defaultValue\", \"onChange\", \"open\", \"defaultOpen\", \"onToggle\", \"searchTerm\", \"defaultSearchTerm\", \"onSearch\", \"filter\", \"allowCreate\", \"delay\", \"focusFirstItem\", \"className\", \"containerClassName\", \"placeholder\", \"busy\", \"disabled\", \"readOnly\", \"selectIcon\", \"busySpinner\", \"dropUp\", \"tabIndex\", \"popupTransition\", \"name\", \"autoComplete\", \"onSelect\", \"onCreate\", \"onKeyPress\", \"onKeyDown\", \"onClick\", \"inputProps\", \"listProps\", \"popupProps\", \"renderListItem\", \"renderListGroup\", \"optionComponent\", \"renderValue\", \"groupBy\", \"onBlur\", \"onFocus\", \"listComponent\", \"popupComponent\", \"data\", \"messages\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport AddToListOption, { CREATE_OPTION } from './AddToListOption';\nimport DropdownListInput from './DropdownListInput';\nimport { caretDown } from './Icon';\nimport List from './List';\nimport { FocusListContext, useFocusList } from './FocusListContext';\nimport BasePopup from './Popup';\nimport Widget from './Widget';\nimport WidgetPicker from './WidgetPicker';\nimport { useActiveDescendant } from './A11y';\nimport { useFilteredData, presets } from './Filter';\nimport * as CustomPropTypes from './PropTypes';\nimport canShowCreate from './canShowCreate';\nimport { useAccessors } from './Accessors';\nimport useAutoFocus from './useAutoFocus';\nimport useDropdownToggle from './useDropdownToggle';\nimport useFocusManager from './useFocusManager';\nimport { useLocalizer } from './Localization';\nimport { notify, useFirstFocusedRender, useInstanceId } from './WidgetHelpers';\nimport PickerCaret from './PickerCaret';\nconst propTypes = {\n  value: PropTypes.any,\n\n  /**\n   * @type {function (\n   *  dataItems: ?any,\n   *  metadata: {\n   *    lastValue: ?any,\n   *    searchTerm: ?string\n   *    originalEvent: SyntheticEvent,\n   *  }\n   * ): void}\n   */\n  onChange: PropTypes.func,\n  open: PropTypes.bool,\n  onToggle: PropTypes.func,\n  data: PropTypes.array,\n  dataKey: CustomPropTypes.accessor,\n  textField: CustomPropTypes.accessor,\n  allowCreate: PropTypes.oneOf([true, false, 'onFilter']),\n\n  /**\n   * A React render prop for customizing the rendering of the DropdownList\n   * value\n   */\n  renderValue: PropTypes.func,\n  renderListItem: PropTypes.func,\n  listComponent: CustomPropTypes.elementType,\n  optionComponent: CustomPropTypes.elementType,\n  renderPopup: PropTypes.func,\n  renderListGroup: PropTypes.func,\n  groupBy: CustomPropTypes.accessor,\n\n  /**\n   *\n   * @type {(dataItem: ?any, metadata: { originalEvent: SyntheticEvent }) => void}\n   */\n  onSelect: PropTypes.func,\n  onCreate: PropTypes.func,\n\n  /**\n   * @type function(searchTerm: string, metadata: { action, lastSearchTerm, originalEvent? })\n   */\n  onSearch: PropTypes.func,\n  searchTerm: PropTypes.string,\n  busy: PropTypes.bool,\n\n  /** Specify the element used to render the select (down arrow) icon. */\n  selectIcon: PropTypes.node,\n\n  /** Specify the element used to render the busy indicator */\n  busySpinner: PropTypes.node,\n  placeholder: PropTypes.string,\n  dropUp: PropTypes.bool,\n  popupTransition: CustomPropTypes.elementType,\n  disabled: CustomPropTypes.disabled.acceptsArray,\n  readOnly: CustomPropTypes.disabled,\n\n  /** Adds a css class to the input container element. */\n  containerClassName: PropTypes.string,\n  inputProps: PropTypes.object,\n  listProps: PropTypes.object,\n  messages: PropTypes.shape({\n    open: PropTypes.string,\n    emptyList: CustomPropTypes.message,\n    emptyFilter: CustomPropTypes.message,\n    createOption: CustomPropTypes.message\n  })\n};\n\nfunction useSearchWordBuilder(delay) {\n  const timeout = useTimeout();\n  const wordRef = useRef('');\n\n  function search(character, cb) {\n    let word = (wordRef.current + character).toLowerCase();\n    if (!character) return;\n    wordRef.current = word;\n    timeout.set(() => {\n      wordRef.current = '';\n      cb(word);\n    }, delay);\n  }\n\n  return search;\n}\n\n/**\n * A `<select>` replacement for single value lists.\n * @public\n */\nconst DropdownListImpl = /*#__PURE__*/React.forwardRef(function DropdownList(_ref, outerRef) {\n  let {\n    id,\n    autoFocus,\n    textField,\n    dataKey,\n    value,\n    defaultValue,\n    onChange,\n    open,\n    defaultOpen = false,\n    onToggle,\n    searchTerm,\n    defaultSearchTerm = '',\n    onSearch,\n    filter = true,\n    allowCreate = false,\n    delay = 500,\n    focusFirstItem,\n    className,\n    containerClassName,\n    placeholder,\n    busy,\n    disabled,\n    readOnly,\n    selectIcon = caretDown,\n    busySpinner,\n    dropUp,\n    tabIndex,\n    popupTransition,\n    name,\n    autoComplete,\n    onSelect,\n    onCreate,\n    onKeyPress,\n    onKeyDown,\n    onClick,\n    inputProps,\n    listProps,\n    popupProps,\n    renderListItem,\n    renderListGroup,\n    optionComponent,\n    renderValue,\n    groupBy,\n    onBlur,\n    onFocus,\n    listComponent: ListComponent = List,\n    popupComponent: Popup = BasePopup,\n    data: rawData = [],\n    messages: userMessages\n  } = _ref,\n      elementProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [currentValue, handleChange] = useUncontrolledProp(value, defaultValue, onChange);\n  const [currentOpen, handleOpen] = useUncontrolledProp(open, defaultOpen, onToggle);\n  const [currentSearch, handleSearch] = useUncontrolledProp(searchTerm, defaultSearchTerm, onSearch);\n  const ref = useRef(null);\n  const filterRef = useRef(null);\n  const listRef = useRef(null);\n  const inputId = useInstanceId(id, '_input');\n  const listId = useInstanceId(id, '_listbox');\n  const activeId = useInstanceId(id, '_listbox_active_option');\n  const accessors = useAccessors(textField, dataKey);\n  const localizer = useLocalizer(userMessages);\n  useAutoFocus(!!autoFocus, ref);\n  const toggle = useDropdownToggle(currentOpen, handleOpen);\n  const isDisabled = disabled === true; // const disabledItems = toItemArray(disabled)\n\n  const isReadOnly = !!readOnly;\n  const [focusEvents, focused] = useFocusManager(ref, {\n    disabled: isDisabled,\n    onBlur,\n    onFocus\n  }, {\n    didHandle(focused) {\n      if (focused) {\n        if (filter) focus();\n        return;\n      }\n\n      toggle.close();\n      clearSearch();\n    }\n\n  });\n  const data = useFilteredData(rawData, currentOpen ? filter : false, currentSearch, accessors.text);\n  const selectedItem = useMemo(() => data[accessors.indexOf(data, currentValue)], [data, currentValue, accessors]);\n  const list = useFocusList({\n    activeId,\n    scope: ref,\n    focusFirstItem,\n    anchorItem: currentOpen ? selectedItem : undefined\n  });\n  const [autofilling, setAutofilling] = useState(false);\n  const nextSearchChar = useSearchWordBuilder(delay);\n  const focusedItem = list.getFocused();\n  useActiveDescendant(ref, activeId, focusedItem && currentOpen, [focusedItem]);\n  const showCreateOption = canShowCreate(allowCreate, {\n    searchTerm: currentSearch,\n    data,\n    accessors\n  });\n\n  const handleCreate = event => {\n    notify(onCreate, [currentSearch]);\n    clearSearch(event);\n    toggle.close();\n    focus();\n  };\n\n  const handleSelect = (dataItem, originalEvent) => {\n    if (readOnly || isDisabled) return;\n    if (dataItem === undefined) return;\n    originalEvent == null ? void 0 : originalEvent.preventDefault();\n\n    if (dataItem === CREATE_OPTION) {\n      handleCreate(originalEvent);\n      return;\n    }\n\n    notify(onSelect, [dataItem, {\n      originalEvent\n    }]);\n    change(dataItem, originalEvent, true);\n    toggle.close();\n    focus();\n  };\n\n  const handleClick = e => {\n    if (readOnly || isDisabled) return; // prevents double clicks when in a <label>\n\n    e.preventDefault();\n    focus();\n    toggle();\n    notify(onClick, [e]);\n  };\n\n  const handleKeyDown = e => {\n    if (readOnly || isDisabled) return;\n    let {\n      key,\n      altKey,\n      ctrlKey,\n      shiftKey\n    } = e;\n    notify(onKeyDown, [e]);\n\n    let closeWithFocus = () => {\n      clearSearch();\n      toggle.close();\n      if (currentOpen) setTimeout(focus);\n    };\n\n    if (e.defaultPrevented) return;\n\n    if (key === 'End' && currentOpen && !shiftKey) {\n      e.preventDefault();\n      list.focus(list.last());\n    } else if (key === 'Home' && currentOpen && !shiftKey) {\n      e.preventDefault();\n      list.focus(list.first());\n    } else if (key === 'Escape' && (currentOpen || currentSearch)) {\n      e.preventDefault();\n      closeWithFocus();\n    } else if (key === 'Enter' && currentOpen && ctrlKey && showCreateOption) {\n      e.preventDefault();\n      handleCreate(e);\n    } else if ((key === 'Enter' || key === ' ' && !filter) && currentOpen) {\n      e.preventDefault();\n      if (list.hasFocused()) handleSelect(list.getFocused(), e);\n    } else if (key === 'ArrowDown') {\n      e.preventDefault();\n\n      if (!currentOpen) {\n        toggle.open();\n        return;\n      }\n\n      list.focus(list.next());\n    } else if (key === 'ArrowUp') {\n      e.preventDefault();\n      if (altKey) return closeWithFocus();\n      list.focus(list.prev());\n    }\n  };\n\n  const handleKeyPress = e => {\n    if (readOnly || isDisabled) return;\n    notify(onKeyPress, [e]);\n    if (e.defaultPrevented || filter) return;\n    nextSearchChar(String.fromCharCode(e.which), word => {\n      if (!currentOpen) return;\n\n      let isValid = item => presets.startsWith(accessors.text(item).toLowerCase(), word.toLowerCase());\n\n      const [items, focusedItem] = list.get();\n      const len = items.length;\n      const startIdx = items.indexOf(focusedItem) + 1;\n      const offset = startIdx >= len ? 0 : startIdx;\n      let idx = 0;\n      let pointer = offset;\n\n      while (idx < len) {\n        pointer = (idx + offset) % len;\n        let item = items[pointer];\n        if (isValid(list.toDataItem(item))) break;\n        idx++;\n      }\n\n      if (idx === len) return;\n      list.focus(items[pointer]);\n    });\n  };\n\n  const handleInputChange = e => {\n    // hitting space to open\n    if (!currentOpen && !e.target.value.trim()) {\n      e.preventDefault();\n    } else {\n      search(e.target.value, e, 'input');\n    }\n\n    toggle.open();\n  };\n\n  const handleAutofillChange = e => {\n    let filledValue = e.target.value.toLowerCase();\n    if (filledValue === '') return void change(null);\n\n    for (const item of rawData) {\n      if (String(accessors.value(item)).toLowerCase() === filledValue || accessors.text(item).toLowerCase() === filledValue) {\n        change(item, e);\n        break;\n      }\n    }\n  };\n\n  function change(nextValue, originalEvent, selected = false) {\n    if (!accessors.matches(nextValue, currentValue)) {\n      notify(handleChange, [nextValue, {\n        originalEvent,\n        source: selected ? 'listbox' : 'input',\n        lastValue: currentValue,\n        searchTerm: currentSearch\n      }]);\n      clearSearch(originalEvent);\n      toggle.close();\n    }\n  }\n\n  function focus() {\n    if (filter) filterRef.current.focus();else ref.current.focus();\n  }\n\n  function clearSearch(originalEvent) {\n    search('', originalEvent, 'clear');\n  }\n\n  function search(nextSearchTerm, originalEvent, action = 'input') {\n    if (currentSearch !== nextSearchTerm) handleSearch(nextSearchTerm, {\n      action,\n      originalEvent,\n      lastSearchTerm: currentSearch\n    });\n  }\n  /**\n   * Render\n   */\n\n\n  useImperativeHandle(outerRef, () => ({\n    focus\n  }));\n  let valueItem = accessors.findOrSelf(data, currentValue);\n  let shouldRenderPopup = useFirstFocusedRender(focused, currentOpen);\n  const widgetProps = Object.assign({}, elementProps, {\n    role: 'combobox',\n    id: inputId,\n    //tab index when there is no filter input to take focus\n    tabIndex: filter ? -1 : tabIndex || 0,\n    // FIXME: only when item exists\n    'aria-owns': elementProps['aria-owns'] ? `${listId} ${elementProps['aria-owns']}` : listId,\n    'aria-controls': elementProps['aria-controls'] ? `${listId} ${elementProps['aria-controls']}` : listId,\n    'aria-expanded': !!currentOpen,\n    'aria-haspopup': 'listbox',\n    'aria-busy': !!busy,\n    'aria-live': currentOpen ? 'polite' : undefined,\n    'aria-autocomplete': 'list',\n    'aria-disabled': isDisabled,\n    'aria-readonly': isReadOnly\n  });\n  return /*#__PURE__*/React.createElement(FocusListContext.Provider, {\n    value: list.context\n  }, /*#__PURE__*/React.createElement(Widget, _extends({}, widgetProps, {\n    open: !!currentOpen,\n    dropUp: !!dropUp,\n    focused: !!focused,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    autofilling: autofilling\n  }, focusEvents, {\n    onKeyDown: handleKeyDown,\n    onKeyPress: handleKeyPress,\n    className: cn(className, 'rw-dropdown-list'),\n    ref: ref\n  }), /*#__PURE__*/React.createElement(WidgetPicker, {\n    onClick: handleClick,\n    tabIndex: filter ? -1 : 0,\n    className: cn(containerClassName, 'rw-widget-input')\n  }, /*#__PURE__*/React.createElement(DropdownListInput, _extends({}, inputProps, {\n    value: valueItem,\n    dataKeyAccessor: accessors.value,\n    textAccessor: accessors.text,\n    name: name,\n    readOnly: readOnly,\n    disabled: isDisabled,\n    allowSearch: !!filter,\n    searchTerm: currentSearch,\n    ref: filterRef,\n    autoComplete: autoComplete,\n    onSearch: handleInputChange,\n    onAutofill: setAutofilling,\n    onAutofillChange: handleAutofillChange,\n    placeholder: placeholder,\n    renderValue: renderValue\n  })), /*#__PURE__*/React.createElement(PickerCaret, {\n    visible: true,\n    busy: busy,\n    icon: selectIcon,\n    spinner: busySpinner\n  })), shouldRenderPopup && /*#__PURE__*/React.createElement(Popup, _extends({}, popupProps, {\n    dropUp: dropUp,\n    open: currentOpen,\n    transition: popupTransition,\n    onEntered: focus,\n    onEntering: () => listRef.current.scrollIntoView()\n  }), /*#__PURE__*/React.createElement(ListComponent, _extends({}, listProps, {\n    id: listId,\n    data: data,\n    tabIndex: -1,\n    disabled: disabled,\n    groupBy: groupBy,\n    searchTerm: currentSearch,\n    accessors: accessors,\n    renderItem: renderListItem,\n    renderGroup: renderListGroup,\n    optionComponent: optionComponent,\n    value: selectedItem,\n    onChange: (d, meta) => handleSelect(d, meta.originalEvent),\n    \"aria-live\": currentOpen ? 'polite' : undefined,\n    \"aria-labelledby\": inputId,\n    \"aria-hidden\": !currentOpen,\n    ref: listRef,\n    messages: {\n      emptyList: rawData.length ? localizer.messages.emptyFilter : localizer.messages.emptyList\n    }\n  })), showCreateOption && /*#__PURE__*/React.createElement(AddToListOption, {\n    onSelect: handleCreate\n  }, localizer.messages.createOption(currentValue, currentSearch || '')))));\n});\nDropdownListImpl.displayName = 'DropdownList';\nDropdownListImpl.propTypes = propTypes;\nexport default DropdownListImpl;","import PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport DropdownList from 'react-widgets/DropdownList';\nimport BusySpinner from './components/BusySpinner';\nimport SelectIcon from './components/SelectIcon';\nimport { getDropdownExtantProps } from './utils/extantPropsUtils';\n\n// Styles\nimport './styles/dropdown.scss';\n\nconst Dropdown = (props) => {\n    const {\n        contextCls,\n        hasError,\n        filter,\n        onChange,\n        onSelect,\n        onToggle,\n        renderBusySpinner,\n        renderSelectIcon,\n    } = props;\n    const baseCls = 'bankai-dropdown';\n    const modCls = {\n        [`${baseCls}--error`]: hasError,\n        [`${baseCls}--no-filter`]: !filter,\n    };\n    const dropdownProps = getDropdownExtantProps(props);\n    const busySpinner = renderBusySpinner({ baseCls });\n    const selectIcon = renderSelectIcon({ baseCls });\n\n    return (\n        <DropdownList\n            {...dropdownProps}\n            className={cx(baseCls, modCls, contextCls)}\n            busySpinner={busySpinner}\n            selectIcon={selectIcon}\n            onChange={onChange}\n            onSelect={onSelect}\n            onToggle={onToggle}\n        />\n    );\n};\n\nDropdown.defaultProps = {\n    filter: false,\n    hasError: false,\n    isBusy: false,\n    isDefaultOpen: false,\n    isDisabled: false,\n    isReadOnly: false,\n    shouldAutoFocus: false,\n    shouldDropUp: false,\n    data: [],\n    onChange: () => Promise.resolve(),\n    onSelect: () => Promise.resolve(),\n    onToggle: () => Promise.resolve(),\n    renderBusySpinner: BusySpinner,\n    renderSelectIcon: SelectIcon,\n};\n\nDropdown.propTypes = {\n    contextCls: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    placeholder: PropTypes.string,\n    delay: PropTypes.number,\n    hasError: PropTypes.bool,\n    isBusy: PropTypes.bool,\n    isDefaultOpen: PropTypes.bool,\n    isDisabled: PropTypes.bool,\n    isOpen: PropTypes.bool,\n    isReadOnly: PropTypes.bool,\n    shouldAutoFocus: PropTypes.bool,\n    shouldDropUp: PropTypes.bool,\n    data: PropTypes.array,\n    disabledOptions: PropTypes.array,\n    inputProps: PropTypes.object,\n    listProps: PropTypes.object,\n    messages: PropTypes.object,\n    dataKey: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    defaultValue: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    filter: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.func,\n        PropTypes.bool,\n    ]),\n    groupBy: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    listComponent: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n    optionComponent: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n    textField: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    onChange: PropTypes.func,\n    onSelect: PropTypes.func,\n    onToggle: PropTypes.func,\n    renderBusySpinner: PropTypes.func,\n    renderListGroup: PropTypes.func,\n    renderListItem: PropTypes.func,\n    renderSelectIcon: PropTypes.func,\n    renderValue: PropTypes.func,\n};\n\nexport default Dropdown;\n"],"names":["MAX_DELAY_MS","setChainedTimeout","handleRef","fn","timeoutAtMs","delayMs","useTimeout","isMounted","useMounted","useRef","useWillUnmount","useMemo","clear","set","DropdownListInput","React","name","autoComplete","value","allowSearch","placeholder","textAccessor","dataKeyAccessor","searchTerm","onSearch","onAutofill","onAutofillChange","renderValue","disabled","readOnly","ref","autofilling","setAutofilling","useState","searchRef","handleAutofillDetect","animationName","handleAutofill","e","dataKey","text","strValue","inputValue","useImperativeHandle","style","cn","_excluded","_extends","target","i","source","key","_objectWithoutPropertiesLoose","excluded","sourceKeys","propTypes","PropTypes","CustomPropTypes.accessor","CustomPropTypes.elementType","CustomPropTypes.disabled","CustomPropTypes.message","useSearchWordBuilder","delay","timeout","wordRef","search","character","cb","word","DropdownListImpl","_ref","outerRef","id","autoFocus","textField","defaultValue","onChange","open","defaultOpen","onToggle","defaultSearchTerm","filter","allowCreate","focusFirstItem","className","containerClassName","busy","selectIcon","caretDown","busySpinner","dropUp","tabIndex","popupTransition","onSelect","onCreate","onKeyPress","onKeyDown","onClick","inputProps","listProps","popupProps","renderListItem","renderListGroup","optionComponent","groupBy","onBlur","onFocus","ListComponent","List","Popup","BasePopup","rawData","userMessages","elementProps","currentValue","handleChange","useUncontrolledProp","currentOpen","handleOpen","currentSearch","handleSearch","filterRef","listRef","inputId","useInstanceId","listId","activeId","accessors","useAccessors","localizer","useLocalizer","useAutoFocus","toggle","useDropdownToggle","isDisabled","isReadOnly","focusEvents","focused","useFocusManager","focus","clearSearch","data","useFilteredData","selectedItem","list","useFocusList","nextSearchChar","focusedItem","useActiveDescendant","showCreateOption","canShowCreate","handleCreate","event","notify","handleSelect","dataItem","originalEvent","CREATE_OPTION","change","handleClick","handleKeyDown","altKey","ctrlKey","shiftKey","closeWithFocus","handleKeyPress","isValid","item","presets","items","len","startIdx","offset","idx","pointer","handleInputChange","handleAutofillChange","filledValue","nextValue","selected","nextSearchTerm","action","valueItem","shouldRenderPopup","useFirstFocusedRender","widgetProps","FocusListContext","Widget","WidgetPicker","PickerCaret","d","meta","AddToListOption","Dropdown","props","contextCls","hasError","renderBusySpinner","renderSelectIcon","baseCls","modCls","dropdownProps","getDropdownExtantProps","jsx","DropdownList","cx","BusySpinner","SelectIcon","BankaiDropdown"],"mappings":"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","x_google_ignoreList":[0,1,2]}